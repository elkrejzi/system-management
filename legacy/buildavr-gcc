#!/bin/bash -e

export VER=4.9.2
#export VER=4.9-20140618
export PKGVER=${VER}
#export PKGVER="4.9.1 20140618"
export DEST=/binary/avr-gcc-${VER}

mv gcc-${VER} src

pushd src

sed -i 's/install_to_$(INSTALL_DEST) //' libiberty/Makefile.in

sed -i "/ac_cpp=/s/\$CPPFLAGS/\$CPPFLAGS -O2/" libiberty/configure
sed -i "/ac_cpp=/s/\$CPPFLAGS/\$CPPFLAGS -O2/" gcc/configure

if [ -f /media/ntfs/Other/Linux/patches/gcc-avr-fixes.patch ]; then
   patch -Np1 -i /media/ntfs/Other/Linux/patches/gcc-avr-fixes.patch
fi

popd

mkdir build

pushd build

CFLAGS="-O2 -pipe"   \
CXXFLAGS="-O2 -pipe" \
../src/configure --prefix=/usr \
                 --libdir=/usr/lib \
                 --disable-install-libiberty \
                 --disable-libssp \
                 --disable-libstdcxx-pch \
                 --disable-libunwind-exceptions \
                 --disable-linker-build-id \
                 --disable-nls \
                 --disable-werror \
                 --enable-__cxa_atexit \
                 --enable-checking=release \
                 --enable-clocale=gnu \
                 --enable-gnu-unique-object \
                 --enable-gold \
                 --enable-install-libiberty \
                 --enable-languages=c,c++ \
                 --enable-ld=default \
                 --enable-lto \
                 --enable-plugin \
                 --enable-shared \
                 --target=avr \
                 --with-as=/usr/bin/avr-as \
                 --with-gnu-as \
                 --with-gnu-ld \
                 --with-ld=/usr/bin/avr-ld \
                 --with-pkgversion='Krejzi ${PKGVER}' \
                 --with-plugin-ld=ld.gold \
                 --with-system-zlib

make -j4
make install DESTDIR=${DEST}

popd

rm -rf src build

find ${DEST} -name "*.la" -delete

find ${DEST}/usr/lib -type f -name "*.a" -exec /usr/bin/avr-strip --strip-debug '{}' \;

rm -rf ${DEST}/usr/include ${DEST}/usr/share/info ${DEST}/usr/share/man/man7

pushd ${DEST}

find * -type f 2>/dev/null | while read BUILD_BINARY ; do
  case "$(file -bi "${BUILD_BINARY}")" in *application/x-sharedlib* | *application/x-executable*)
    strip --strip-unneeded ${BUILD_BINARY}
  esac
done

popd

cat > ${DEST}/INSTALL << "EOF"
#!/bin/bash

cp -rf --remove-destination usr /

[ -x /usr/bin/mandb ] && echo "Processing triggers for man-db" && /usr/bin/mandb -q
EOF

chmod 755 ${DEST}/INSTALL
