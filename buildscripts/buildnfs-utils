#!/bin/bash -e

export PKGNAME=nfs-utils
export PKGVER=1.3.3
export PKGTAR=${PKGNAME}-${PKGVER}.tar.bz2
export PKGURL="https://downloads.sourceforge.net/nfs/${PKGTAR}"
export MAKE_JOBS_FLAGS="-j4"
export KEEP_EMPTY_DIRS=1
export CONFIGURE_FLAGS=(--sbindir=/sbin
                        --enable-libmount-mount
                        --without-tcp-wrappers
                        --disable-gss)

export DEFAULT_CC="clang"
export DEFAULT_CXX="clang++ -stdlib=libc++"

configure_pre() {
  sed -i "/daemon_init/s:\!::" utils/statd/statd.c
}

make_install_post() {
  install -Dm644 utils/mount/nfsmount.conf ${DEST}/etc/nfsmount.conf

  install -dm755 ${DEST}/etc/default ${DEST}/etc/systemd/system/multi-user.target.wants
  install -dm755 ${DEST}/etc/systemd/system/remote-fs.target.wants ${DEST}/lib/systemd/system

  install -dm555 ${DEST}/var/lib/nfs/rpc_pipefs
  install -dm755 ${DEST}/var/lib/nfs/v4recovery

cat > ${DEST}/etc/idmapd.conf << "EOF"
[General]
Verbosity = 0
Pipefs-Directory = /var/lib/nfs/rpc_pipefs
Domain = localdomain

[Mapping]
Nobody-User = nobody
Nobody-Group = nogroup

[Translation]
Method = nsswitch
EOF

cat > ${DEST}/etc/default/nfs-utils << "EOF"
# Begin /etc/default/nfs-utils

# Options to pass to rpc.idmapd.
# See rpc.idmapd(8) for more details.
IDMAPD_OPTS=""

# Options to paass to rpc.mountd.
# If you have a port-based firewall, you might want to set up
# a fixed port here using the --port option.
# See rpc.mountd(8) for more details.
MOUNTD_OPTS=""

# Options to pass to rpc.nfsd.
# See rpc.nfsd(8) for more details.
NFSD_OPTS=""

# Options to pass to sm-notify.
# See sm-notify(8) for more details.
SM_NOTIFY_OPTS=""

# Options to pass to rpc.statd.
# See rpc.statd(8) for more details.
STATD_OPTS=""

# End /etc/default/nfs-utils
EOF

cat > ${DEST}/lib/systemd/system/nfs-client.service << "EOF"
[Unit]
Description=NFS server and client services

[Service]
Type=oneshot
RemainAfterExit=yes
ExecStart=/bin/true
EOF

cat > ${DEST}/lib/systemd/system/nfs-client.target << "EOF"
[Unit]
Description=NFS client services
Before=remote-fs-pre.target
Wants=remote-fs-pre.target rpc-statd-notify.service

[Install]
WantedBy=multi-user.target
WantedBy=remote-fs.target
EOF

cat > ${DEST}/lib/systemd/system/nfs-server.service << "EOF"
[Unit]
Description=NFS server and services
Requires=network.target proc-fs-nfsd.mount rpcbind.target rpc-mountd.service
Wants=rpc-idmapd.service rpc-statd.service rpc-statd-notify.service
Before=rpc-statd-notify.service
After=network.target proc-fs-nfsd.mount rpcbind.target rpc-idmapd.service rpc-statd.service

[Service]
Type=oneshot
RemainAfterExit=yes
EnvironmentFile=/etc/default/nfs-utils
ExecStartPre=/sbin/exportfs -r
ExecStart=/sbin/rpc.nfsd $NFSD_OPTS
ExecStop=/sbin/rpc.nfsd 0
ExecStopPost=/sbin/exportfs -au
ExecStopPost=/sbin/exportfs -f
ExecReload=/sbin/exportfs -r

[Install]
WantedBy=multi-user.target
EOF

cat > ${DEST}/lib/systemd/system/proc-fs-nfsd.mount << "EOF"
[Unit]
Description=NFSD configuration filesystem

[Mount]
What=nfsd
Where=/proc/fs/nfsd
Type=nfsd
EOF

cat > ${DEST}/lib/systemd/system/rpc-idmapd.service << "EOF"
[Unit]
Description=NFSv4 ID-name mapping service
Requires=var-lib-nfs-rpc_pipefs.mount
After=var-lib-nfs-rpc_pipefs.mount
BindsTo=nfs-server.service

[Service]
Type=forking
EnvironmentFile=/etc/default/nfs-utils
ExecStart=/sbin/rpc.idmapd $IDMAPD_OPTS
EOF

cat > ${DEST}/lib/systemd/system/rpc-mountd.service << "EOF"
[Unit]
Description=NFS Mount Daemon
Requires=proc-fs-nfsd.mount
After=proc-fs-nfsd.mount network.target
BindsTo=nfs-server.service

[Service]
Type=forking
EnvironmentFile=/etc/default/nfs-utils
ExecStart=/sbin/rpc.mountd $MOUNTD_OPTS
EOF

cat > ${DEST}/lib/systemd/system/rpc-statd-notify.service << "EOF"
[Unit]
Description=Notify NFS peers of a restart
Requires=network-online.target
After=network-online.target nss-lookup.target nfs-server.service
PartOf=nfs-client.service

[Service]
Type=forking
EnvironmentFile=/etc/default/nfs-utils
ExecStart=/sbin/sm-notify $SM_NOTIFY_OPTS
EOF

cat > ${DEST}/lib/systemd/system/rpc-statd.service << "EOF"
[Unit]
Description=NFS status monitor for NFSv2/3 locking.
DefaultDependencies=no
Conflicts=umount.target
Requires=nss-lookup.target rpcbind.target
After=network.target nss-lookup.target rpcbind.target
PartOf=nfs-client.service

[Service]
Type=forking
EnvironmentFile=/etc/default/nfs-utils
PIDFile=/var/run/rpc.statd.pid
ExecStart=/sbin/rpc.statd --no-notify $STATD_OPTS
EOF

cat > ${DEST}/lib/systemd/system/var-lib-nfs-rpc_pipefs.mount << "EOF"
[Unit]
Description=RPC Pipe File System
DefaultDependencies=no
Conflicts=umount.target

[Mount]
What=sunrpc
Where=/var/lib/nfs/rpc_pipefs
Type=rpc_pipefs
EOF

  ln -sf /lib/systemd/system/nfs-client.target ${DEST}/etc/systemd/system/multi-user.target.wants/nfs-client.target
  ln -sf /lib/systemd/system/nfs-client.target ${DEST}/etc/systemd/system/remote-fs.target.wants/nfs-client.target
}

. $(dirname $0)/master.sh
