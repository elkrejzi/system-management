#!/bin/bash -e

export VER=3.7.0
export DEST=/binary/libunwind-${VER}

pushd libunwind-${VER}.src

mkdir build64 && pushd build64

export CC="clang"
export CXX="clang++"

cmake -DCMAKE_INSTALL_PREFIX=/usr \
      -DCMAKE_BUILD_TYPE=Release  \
      -DLLVM_LIBDIR_SUFFIX=/llvm  \
      -DLLVM_ENABLE_RTTI=ON       \
      -DCMAKE_C_FLAGS="-march=sandybridge -fomit-frame-pointer -O2 -pipe -fstack-protector-strong"   \
      -DCMAKE_CXX_FLAGS="-march=sandybridge -fomit-frame-pointer -O2 -pipe -fstack-protector-strong" \
      -Wno-dev ..

make -j4
make install DESTDIR=${DEST}

popd

mkdir build32 && pushd build32

export CC="clang -m32"
export CXX="clang++ -m32"

cmake -DCMAKE_INSTALL_PREFIX=/usr  \
      -DCMAKE_BUILD_TYPE=Release   \
      -DLLVM_LIBDIR_SUFFIX=32/llvm \
      -DLLVM_ENABLE_RTTI=ON        \
      -DLLVM_CONFIG=/usr/bin/llvm-config32 \
      -DCMAKE_C_FLAGS="-march=sandybridge -fomit-frame-pointer -O2 -pipe -fstack-protector-strong"   \
      -DCMAKE_CXX_FLAGS="-march=sandybridge -fomit-frame-pointer -O2 -pipe -fstack-protector-strong" \
      -Wno-dev ..

make -j4
make install DESTDIR=${PWD}/dest

mv dest/usr/lib32 ${DEST}/usr

popd

install -dm755 ${DEST}/usr/include/llvm/libunwind/mach-o
install -m644 include/*.h ${DEST}/usr/include/llvm/libunwind
install -m644 include/mach-o/*.h ${DEST}/usr/include/llvm/libunwind/mach-o

popd

rm -rf libunwind-${VER}.src

find ${DEST} -name "*.la" -delete

pushd ${DEST}

find * -type f 2>/dev/null | while read BUILD_BINARY ; do
  case "$(file -bi "${BUILD_BINARY}")" in *application/x-sharedlib* | *application/x-executable*)
    strip --strip-unneeded ${BUILD_BINARY}
  esac
done

popd

cat > ${DEST}/INSTALL << "EOF"
#!/bin/bash

cp -rf --remove-destination usr /

[ -x /sbin/ldconfig ] && echo "Processing triggers for glibc" && /sbin/ldconfig
EOF

chmod 755 ${DEST}/INSTALL
