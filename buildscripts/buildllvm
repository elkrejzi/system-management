#!/bin/bash -e

export VER=3.5.0

for tarball in cfe-${VER}.src.tar.xz clang-tools-extra-${VER}.src.tar.xz  \
               compiler-rt-${VER}.src.tar.xz llvm-${VER}.src.tar.xz
do
  tar xf ${tarball}
done

rm -rf llvm-${VER}.src/projects/compiler-rt
rm -rf llvm-${VER}.src/tools/clang

rm -rf cfe-${VER}.src/tools/extra

mv compiler-rt-${VER}.src llvm-${VER}.src/projects/compiler-rt

cp -a llvm-${VER}.src llvm-${VER}.src-32

mv cfe-${VER}.src llvm-${VER}.src/tools/clang
mv clang-tools-extra-${VER}.src llvm-${VER}.src/tools/clang/tools/extra

pushd llvm-${VER}.src

sed -e 's:$(PROJ_prefix)/docs/llvm:$(PROJ_prefix)/share/doc/llvm:' \
    -i Makefile.config.in

sed "/ld-linux-x86-64/s/lib64/lib/" -i tools/clang/lib/Driver/Tools.cpp

sed -i '/@LLVM_CONFIG_CMAKE_DIR@/s:$(PROJ_cmake):$(PROJ_prefix)/share/llvm/cmake:' cmake/modules/Makefile

patch -Np0 -i /media/ntfs/Other/Linux/patches/llvm-fixes.patch

export CC="gcc"
export CXX="g++"

CFLAGS="-march=native -mtune=native -O2 -pipe -fstack-protector-strong"   \
CXXFLAGS="-march=native -mtune=native -O2 -pipe -fstack-protector-strong" \
./configure --prefix=/usr --sysconfdir=/etc  --enable-shared   \
            --enable-libffi --enable-targets=x86,r600          \
            --disable-expensive-checks --disable-debug-runtime \
            --disable-assertions --enable-optimized

make -j4
make -C docs -f Makefile.sphinx man

make install DESTDIR=/binary/llvm-${VER}

rm -rf /binary/llvm-${VER}/usr/lib/LLVMHello.so
rm -rf /binary/llvm-${VER}/usr/share/doc

#install -dm755 /binary/llvm-${VER}/usr/lib/bfd-plugins
#ln -sf ../LLVMgold.so /binary/llvm-${VER}/usr/lib/bfd-plugins/LLVMgold.so

chmod 644 /binary/llvm-${VER}/usr/lib/*.a
chmod 755 /binary/llvm-${VER}/usr/lib/*.so

mv /binary/llvm-${VER}/usr/include/llvm/Config/config.h /binary/llvm-${VER}/usr/include/llvm/Config/config-64.h
mv /binary/llvm-${VER}/usr/include/llvm/Config/llvm-config.h /binary/llvm-${VER}/usr/include/llvm/Config/llvm-config-64.h

cat > /binary/llvm-${VER}/usr/include/llvm/Config/config.h << "EOF"
#include <bits/wordsize.h>

#if __WORDSIZE == 32
#include "config-32.h"
#elif __WORDSIZE == 64
#include "config-64.h"
#else
#error "Unknown word size"
#endif
EOF

cat > /binary/llvm-${VER}/usr/include/llvm/Config/llvm-config.h << "EOF"
#include <bits/wordsize.h>

#if __WORDSIZE == 32
#include "llvm-config-32.h"
#elif __WORDSIZE == 64
#include "llvm-config-64.h"
#else
#error "Unknown word size"
#endif
EOF

mkdir -p /binary/llvm-${VER}/usr/share/man/man1
cp docs/_build/man/*.1 /binary/llvm-${VER}/usr/share/man/man1

mkdir -p /binary/llvm-${VER}/usr/lib/clang-analyzer

for _tool in scan-build scan-view; do
   cp -rf tools/clang/tools/$_tool /binary/llvm-${VER}/usr/lib/clang-analyzer/
   ln -s ../lib/clang-analyzer/$_tool/$_tool /binary/llvm-${VER}//usr/bin/
done

ln -s /usr/bin/clang /binary/llvm-${VER}/usr/lib/clang-analyzer/scan-build/
mv /binary/llvm-${VER}/usr/lib/clang-analyzer/scan-build/scan-build.1 /binary/llvm-${VER}/usr/share/man/man1/

python -m compileall /binary/llvm-${VER}/usr/lib/clang-analyzer
python -O -m compileall /binary/llvm-${VER}/usr/lib/clang-analyzer

popd

pushd llvm-${VER}.src-32

sed -e 's:\$(PROJ_prefix)/lib:$(PROJ_prefix)/lib32:' \
    -e 's:\$(PROJ_prefix)/docs/llvm:$(PROJ_prefix)/share/doc/llvm:' \
    -i Makefile.config.in

sed -e '/ActiveLibDir = ActivePrefix/s:lib:lib32:' \
    -i tools/llvm-config/llvm-config.cpp

export CC="gcc -m32"
export CXX="g++ -m32"
export PKG_CONFIG_PATH=/usr/lib32/pkgconfig

CFLAGS="-march=native -mtune=native -O2 -pipe -fstack-protector-strong"   \
CXXFLAGS="-march=native -mtune=native -O2 -pipe -fstack-protector-strong" \
./configure --prefix=/usr --sysconfdir=/etc --libdir=/usr/lib32       \
            --enable-shared --enable-libffi --enable-targets=x86,r600 \
            --disable-expensive-checks --disable-debug-runtime        \
            --disable-assertions --enable-optimized                   \
            --host=i686-pc-linux-gnu --target=i686-pc-linux-gnu

make -j4
make install DESTDIR=${PWD}/dest

rm -rf dest/usr/lib32/LLVMHello.so

chmod 644 dest/usr/lib32/*.a
chmod 755 dest/usr/lib32/*.so

mv dest/usr/bin/i686-pc-linux-gnu-llvm-config /binary/llvm-${VER}/usr/bin/llvm-config32

mv dest/usr/include/llvm/Config/config.h /binary/llvm-${VER}/usr/include/llvm/Config/config-32.h
mv dest/usr/include/llvm/Config/llvm-config.h /binary/llvm-${VER}/usr/include/llvm/Config/llvm-config-32.h

mv dest/usr/lib32 /binary/llvm-${VER}/usr/

popd

rm -rf llvm-${VER}.src llvm-${VER}.src-32

pushd /binary/llvm-${VER}/
find * -type f 2>/dev/null | while read BUILD_BINARY ; do
  case "$(file -bi "${BUILD_BINARY}")" in *application/x-sharedlib* | *application/x-executable*)
    strip --strip-unneeded ${BUILD_BINARY}
  esac
done

find * -type f -name "*.a" | xargs strip --strip-unneeded

popd

cat > /binary/llvm-${VER}/INSTALL << "EOF"
#!/bin/bash

cp -rf --remove-destination usr /

[ -x /usr/bin/mandb ] && echo "Processing triggers for man-db" && /usr/bin/mandb -q
[ -x /sbin/ldconfig ] && echo "Processing triggers for glibc" && /sbin/ldconfig
EOF

chmod 755 /binary/llvm-${VER}/INSTALL
