#!/bin/bash -e

export VER=0.34.0
export DEST=/binary/poppler-${VER}

cp -a poppler-${VER} poppler-${VER}-static

pushd poppler-${VER}

CFLAGS="-march=sandybridge -fomit-frame-pointer -O2 -pipe -fstack-protector-strong"   \
CXXFLAGS="-march=sandybridge -fomit-frame-pointer -O2 -pipe -fstack-protector-strong" \
./configure --prefix=/usr     \
            --sysconfdir=/etc \
            --disable-static  \
            --enable-xpdf-headers

make -j4
make install DESTDIR=${DEST}

popd

pushd poppler-${VER}-static

# Build static library with -fPIC
CFLAGS="-march=sandybridge -fomit-frame-pointer -O2 -pipe -fstack-protector-strong -fPIC"   \
CXXFLAGS="-march=sandybridge -fomit-frame-pointer -O2 -pipe -fstack-protector-strong -fPIC" \
./configure --prefix=/usr

make -C goo     -j4
make -C fofi    -j4
make -C splash  -j4
make -C poppler -j4

install -m644 poppler/.libs/libpoppler.a ${DEST}/usr/lib

popd

rm -rf poppler-${VER} poppler-${VER}-static

find ${DEST} -name "*.la" -delete

rm -rf ${DEST}/usr/bin/poppler-glib-demo
rm -rf ${DEST}/usr/lib/libpoppler.so

# Use static library to avoid infinite amount of rebuilds every Poppler release.
echo "INPUT ( /usr/lib/libpoppler.a -lfontconfig -lfreetype -ljpeg -llcms2 -lopenjpeg -lpng -lpthread )" > ${DEST}/usr/lib/libpoppler.so

pushd ${DEST}

find * -type f 2>/dev/null | while read BUILD_BINARY ; do
  case "$(file -bi "${BUILD_BINARY}")" in *application/x-sharedlib* | *application/x-executable*)
    strip --strip-unneeded ${BUILD_BINARY}
  esac
done

popd

cat > ${DEST}/INSTALL << "EOF"
#!/bin/bash

cp -rf --remove-destination usr /

[ -x /usr/bin/mandb ] && echo "Processing triggers for man-db" && /usr/bin/mandb -q
[ -x /sbin/ldconfig ] && echo "Processing triggers for glibc" && /sbin/ldconfig
EOF

chmod 755 ${DEST}/INSTALL
