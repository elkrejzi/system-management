#!/bin/bash -e

case $(basename $0) in
  buildglslang )
    export PKGNAME=glslang
    export PKGVER=3.0

    make_install_post() {
      install -dm755 ${DEST}/usr/include/glslang/SPIRV
      install -m644 ../${PKGDIR}/SPIRV/*.{h,hpp} ${DEST}/usr/include/glslang/SPIRV
    }
  ;;
  buildSPIRV-Tools )
    export PKGNAME=SPIRV-Tools
    export PKGVER=1.1.1
    export USER_CXXFLAGS="-fPIC"
  ;;
  buildVulkan-LoaderAndValidationLayers )
    export PKGNAME=Vulkan-LoaderAndValidationLayers
    export PKGVER=1.0.17.0
    export CMAKE_FLAGS=(-DCMAKE_INSTALL_SYSCONFDIR=/etc
                        -DCMAKE_SKIP_RPATH=ON
                        -DBUILD_TESTS=OFF
                        -DGLSLANG_SPIRV_INCLUDE_DIR=/usr/include/glslang)
    export CMAKE_FLAGS_32=(${CMAKE_FLAGS[@]})
  ;;
  buildvulkan-runtime )
    export PKG_AUTO_INSTALL=1

    $(dirname $0)/buildglslang
    $(dirname $0)/buildSPIRV-Tools
    $(dirname $0)/buildVulkan-LoaderAndValidationLayers

    find /binary/{glslang,SPIRV-Tools,Vulkan-LoaderAndValidationLayers}* -name "INSTALL" -exec grep -rl "exit 0" {} \; | while read f ; do head --lines -2 ${f} > ${f}.new ; mv ${f}.new ${f} ; chmod 755 ${f} ; done

    exit 0
  ;;
esac

export MAKE_JOBS_FLAGS="-j4"
export CMAKE_BUILD=1
export MULTILIB_BUILD=1
export DEFAULT_CC="gcc"
export DEFAULT_CXX="g++"
export DEFAULT_CC_M32="gcc -m32"
export DEFAULT_CXX_M32="g++ -m32"

prepare_src_override() {
  export PKGDIR=${PKGNAME}
  export PATH_TO_SOURCE="../${PKGDIR}"

  if [ ${MULTILIB} == 0 ]
  then
    if [ -e ${PKGDIR} ] || [ -e ${PKGBUILD} ]
    then
      if [ -z ${RECURSIVE_CALL} ]
      then
        echo "Warning: Old source and/or build dir exists. Removing."
        rm -rf ${PKGDIR} ${PKGBUILD}
      fi
    fi

    if [ -e git/${PKGNAME}.tar.xz ]
    then
      tar xf git/${PKGNAME}.tar.xz
      pushd ${PKGNAME}
        git fetch origin
        git reset --hard origin/master
      popd
    else
      git clone https://github.com/KhronosGroup/${PKGNAME}.git
    fi

    if [ ${PKGNAME} == "SPIRV-Tools" ]
    then
      git clone https://github.com/KhronosGroup/SPIRV-Headers.git ${PKGDIR}/external/spirv-headers
    fi

    if [ -e ${DEST} ] || [ -e ${DEST}-debug ]
    then
      if [ ${PKG_BUILDING} != 1 ]
      then
        echo "Warning: Old package installation dir exits. Removing."
        rm -rf ${DEST} ${DEST}-debug
      fi
    fi

    export PKG_BUILDING=1

    cp -a ${PKGDIR} ${PKGDIR}-checkout
  else
    mv ${PKGDIR}-checkout ${PKGDIR}
  fi

  rm -rf ${PKGBUILD}

  install -dm755 ${PKGBUILD}
}

if [ "$(basename $0)" == "buildglslang" ] || [ "$(basename $0)" == "buildSPIRV-Tools" ]
then
  make_install_post_32() {
    install -dm755 ${DEST}/usr/lib32
    mv dest/usr/lib/* ${DEST}/usr/lib32
  }
fi

if [ "$(basename $0)" == "buildVulkan-LoaderAndValidationLayers" ]
then
  make_install_override() {
    if [ ${MULTILIB} == 0 ]
    then
      local LIB=lib
    else
      local LIB=lib32
    fi

    install -dm755 ${DEST}/etc                \
                   ${DEST}/usr/bin            \
                   ${DEST}/usr/include/vulkan \
                   ${DEST}/usr/${LIB}

    if [ ${MULTILIB} == 0 ]
    then
      install -dm755 ${DEST}/usr/share/vulkan/explicit_layer.d \
                     ${DEST}/usr/share/vulkan/implicit_layer.d

      install -m755 demos/vulkaninfo ${DEST}/usr/bin
      install -m644 ../${PKGDIR}/include/vulkan/*.h ${DEST}/usr/include/vulkan

      rm -rf ${DEST}/usr/include/vulkan/vk_platform.h ${DEST}/usr/include/vulkan/vulkan.h
    else
      install -m755 demos/vulkaninfo ${DEST}/usr/bin/vulkaninfo32
    fi

    install -m755 layers/*.so ${DEST}/usr/${LIB}

    install -m755 loader/*.so.*.* ${DEST}/usr/${LIB}
    cp -rf loader/*.so.? ${DEST}/usr/${LIB}
    cp -rf loader/*.so ${DEST}/usr/${LIB}

    if [ ${MULTILIB} == 0 ]
    then
      for i in ../${PKGDIR}/layers/linux/*.json
      do
        sed 's#./##' $i > ${DEST}/usr/share/vulkan/explicit_layer.d/$(basename $i)
      done
    fi
  }
fi

. $(dirname $0)/master.sh
