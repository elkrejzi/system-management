#!/bin/bash -e

export PKGVER=5.27.0
export MAKE_JOBS_FLAGS="-j4"
export CMAKE_BUILD=1
export KEEP_DOC=1

build_all() {
  export PKG_AUTO_INSTALL=1

  $(dirname $0)/buildattica $1
  $(dirname $0)/buildbreeze-icons $1
  $(dirname $0)/buildkarchive $1
  $(dirname $0)/buildkcodecs $1
  $(dirname $0)/buildkconfig $1
  $(dirname $0)/buildkcoreaddons $1
  $(dirname $0)/buildkdbusaddons $1
  $(dirname $0)/buildkguiaddons $1
  $(dirname $0)/buildki18n $1
  $(dirname $0)/buildkitemviews $1
  $(dirname $0)/buildkwidgetsaddons $1
  $(dirname $0)/buildkwindowsystem $1
  $(dirname $0)/buildsolid $1
  $(dirname $0)/buildsonnet $1
  $(dirname $0)/buildkauth $1
  $(dirname $0)/buildkcompletion $1
  $(dirname $0)/buildkcrash $1
  $(dirname $0)/buildkdoctools $1
  $(dirname $0)/buildknotifications $1
  $(dirname $0)/buildkpty $1
  $(dirname $0)/buildkconfigwidgets $1
  $(dirname $0)/buildkservice $1
  $(dirname $0)/buildkglobalaccel $1
  $(dirname $0)/buildkiconthemes $1
  $(dirname $0)/buildkjobwidgets $1
  $(dirname $0)/buildktextwidgets $1
  $(dirname $0)/buildkwallet $1
  $(dirname $0)/buildkxmlgui $1
  $(dirname $0)/buildkbookmarks $1
  $(dirname $0)/buildkio $1
  $(dirname $0)/buildframeworkintegration $1
  $(dirname $0)/buildkinit $1
  $(dirname $0)/buildknotifyconfig $1
  $(dirname $0)/buildkparts $1

  find /binary/frameworks -name "INSTALL" -exec grep -rl "exit 0" {} \; | while read f ; do head --lines -2 ${f} > ${f}.new ; mv ${f}.new ${f} ; chmod 755 ${f} ; done

  exit 0
}

case $(basename $0) in
  buildkde-frameworks )
    build_all
  ;;
  buildkde-frameworks-git )
    build_all git
  ;;
esac

export CMAKE_FLAGS=(-DSYSCONF_INSTALL_DIR=/etc
                    -DKDE_INSTALL_LIBDIR=lib
                    -DBUILD_TESTING=OFF
                    -DQML_INSTALL_DIR=lib/qt5/qml
                    -DQT_PLUGIN_INSTALL_DIR=lib/qt5/plugins
                    -DECM_MKSPECS_INSTALL_DIR=/usr/lib/qt5/mkspecs/modules)

frameworks=(
  attica
  breeze-icons
  karchive
  kcodecs
  kconfig
  kcoreaddons
  kdbusaddons
  kguiaddons
  ki18n
  kitemviews
  kwidgetsaddons
  kwindowsystem
  solid
  sonnet
  kauth
  kcompletion
  kcrash
  kdoctools
  knotifications
  kpty
  kconfigwidgets
  kglobalaccel
  kservice
  kiconthemes
  kjobwidgets
  ktextwidgets
  kwallet
  kxmlgui
  kbookmarks
  kio
  frameworkintegration
  kinit
  knotifyconfig
  kparts )

if [ -z $1 ]
then
  export BUILD_TYPE="rel"
elif [ $1 == "git" ]
then
  export BUILD_TYPE="git"
fi

for framework in ${frameworks[@]}
do
  case $(basename $0) in
    build${framework} )
      export PKGNAME=${framework}
      export PKGTAR=${PKGNAME}-${PKGVER}.tar.xz
      export PKGURL="http://download.kde.org/stable/frameworks/${PKGVER%.0}/${PKGTAR}"
      if [ ${BUILD_TYPE} == "git" ]
      then
        export PKGDIR=${framework}
      fi
    ;;
  esac
done

if [ ${BUILD_TYPE} == "git" ]
then
  prepare_src_override() {
    if [ -d ${PKGNAME} ]
    then
      pushd ${PKGNAME}
        git clean -fdx
        git fetch origin
        git reset --hard origin/master
      popd
    else
      git clone git://anongit.kde.org/${PKGNAME}.git
    fi

    if [ ${PKGNAME} != "kapidox" ] && [ ${PKGNAME} != "kimageformats" ]
    then
      export PKGVER=$(grep "KF5_VERSION " ${PKGDIR}/CMakeLists.txt | cut -d \" -f2)
      export DEST=/binary/frameworks/${PKGNAME}-${PKGVER}
    fi

    if [ -d ${PKGBUILD} ]
    then
      echo "Old build dir exists. Removing"
      rm -rf ${PKGBUILD}
    fi

    install -dm755 ${PKGBUILD}

    if [ -e ${DEST} ] || [ -e ${DEST}-debug ]
    then
      if [ ${PKG_BUILDING} != 1 ]
      then
        echo "Warning: Old package installation dir exits. Removing."
        rm -rf ${DEST} ${DEST}-debug
      fi
    fi

    export PKG_BUILDING=1
  }
fi

if [ -z ${DEST} ]
then
  export DEST=/binary/frameworks/${PKGNAME}-${PKGVER}
fi

. $(dirname $0)/master.sh
