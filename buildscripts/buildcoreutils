#!/bin/bash -e

export VER=8.23
export DEST=/binary/coreutils-${VER}

pushd coreutils-${VER}

FORCE_UNSAFE_CONFIGURE=1                   \
CFLAGS="-march=native -mtune=native -O2 -pipe -fstack-protector-strong "   \
CXXFLAGS="-march=native -mtune=native -O2 -pipe -fstack-protector-strong " \
./configure --prefix=/usr  \
            --with-openssl \
            --enable-no-install-program=kill,uptime

make -j4
make install DESTDIR=${DEST}

popd

rm -rf coreutils-${VER}

rm -rf ${DEST}/usr/share/info/dir
gzip -9 ${DEST}/usr/share/info/*

install -dm755 ${DEST}/bin ${DEST}/usr/sbin

mv ${DEST}/usr/bin/{cat,chgrp,chmod,chown,cp,date,dd,df,echo} ${DEST}/bin
mv ${DEST}/usr/bin/{false,ln,ls,mkdir,mknod,mv,pwd,rm} ${DEST}/bin
mv ${DEST}/usr/bin/{rmdir,stty,sync,true,uname} ${DEST}/bin
mv ${DEST}/usr/bin/{head,sleep,nice,test,[} ${DEST}/bin

mv ${DEST}/usr/bin/chroot ${DEST}/usr/sbin

pushd ${DEST}

find * -type f 2>/dev/null | while read BUILD_BINARY ; do
  case "$(file -bi "${BUILD_BINARY}")" in *application/x-sharedlib* | *application/x-executable*)
    strip --strip-unneeded ${BUILD_BINARY}
  esac
done

popd

cat > ${DEST}/INSTALL << "EOF"
#!/bin/bash

for dir in bin usr ; do cp -rf --remove-destination $dir / ; done

[ -x /usr/bin/install-info ] && echo "Processing triggers for texinfo" && for file in usr/share/info/* ; do /usr/bin/install-info /$file /usr/share/info/dir ; done
[ -x /usr/bin/mandb ] && echo "Processing triggers for man-db" && /usr/bin/mandb -q
EOF

chmod 755 ${DEST}/INSTALL
