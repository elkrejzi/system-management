#!/bin/bash -e

export PKGVER=16.04.2
export LIBKGAPI_PKGVER=5.1.0

export MAKE_JOBS_FLAGS="-j4"
export CMAKE_BUILD=1
export KEEP_DOC=1

build_all() {
  export PKG_AUTO_INSTALL=1

  $(dirname $0)/buildakonadi $1
  $(dirname $0)/buildgpgmepp $1
  $(dirname $0)/buildgrantleetheme $1
  $(dirname $0)/buildkdgantt2 $1
  $(dirname $0)/buildkcalcore $1
  $(dirname $0)/buildkcontacts $1
  $(dirname $0)/buildkholidays $1
  $(dirname $0)/buildkldap $1
  $(dirname $0)/buildkmime $1
  $(dirname $0)/buildkontactinterface $1
  $(dirname $0)/buildkpimtextedit $1
  $(dirname $0)/buildsyndication $1
  $(dirname $0)/buildkblog $1
  $(dirname $0)/buildkidentitymanagement $1
  $(dirname $0)/buildkimap $1
  $(dirname $0)/buildkmbox $1
  $(dirname $0)/buildkcalutils $1
  $(dirname $0)/buildktnef $1
  $(dirname $0)/buildlibkleo $1
  $(dirname $0)/buildkdepimlibs $1
  $(dirname $0)/buildlibkgapi $1
  $(dirname $0)/buildakonadi-search $1
  $(dirname $0)/buildkalarmcal $1
  $(dirname $0)/buildkmailtransport $1
  $(dirname $0)/buildlibkdepim $1
  $(dirname $0)/buildakonadi-calendar $1
  $(dirname $0)/buildmailimporter $1
  $(dirname $0)/buildpimcommon $1
  $(dirname $0)/buildkdepim-apps-libs $1
  $(dirname $0)/buildlibgravatar $1
  $(dirname $0)/buildlibksieve $1
  $(dirname $0)/buildcalendarsupport $1
  $(dirname $0)/buildmessagelib $1
  $(dirname $0)/buildeventviews $1
  $(dirname $0)/buildmailcommon $1
  $(dirname $0)/buildincidenceeditor $1
  $(dirname $0)/buildkdepim-addons $1

  find /binary/kdepim -name "INSTALL" -exec grep -rl "exit 0" {} \; | while read f ; do head --lines -2 ${f} > ${f}.new ; mv ${f}.new ${f} ; chmod 755 ${f} ; done

  exit 0
}

case $(basename $0) in
  buildkdepim-frameworks )
    build_all
  ;;
  buildkdepim-frameworks-git )
    build_all git
  ;;
  buildkdepim-runtime-git )
    $(dirname $0)/buildkdepim-runtime git

    exit 0
  ;;
  buildkdepim-git )
    $(dirname $0)/buildkdepim git

    exit 0
  ;;
  buildkleopatra-git )
    $(dirname $0)/buildkleopatra git

    exit 0
  ;;
esac

export CMAKE_FLAGS=(-DSYSCONF_INSTALL_DIR=/etc
                    -DKDE_INSTALL_LIBDIR=lib
                    -DBUILD_TESTING=OFF
                    -DQML_INSTALL_DIR=lib/qt5/qml
                    -DQT_PLUGIN_INSTALL_DIR=lib/qt5/plugins
                    -DECM_MKSPECS_INSTALL_DIR=/usr/lib/qt5/mkspecs/modules)

kdepims=(
  akonadi
  gpgmepp
  grantleetheme
  kdgantt2
  kcalcore
  kcontacts
  kholidays
  kldap
  kmime
  kontactinterface
  kpimtextedit
  syndication
  kblog
  kidentitymanagement
  kimap
  kmbox
  kcalutils
  ktnef
  libkleo
  kdepimlibs
  libkgapi
  akonadi-search
  kalarmcal
  kmailtransport
  libkdepim
  akonadi-calendar
  mailimporter
  pimcommon
  kdepim-apps-libs
  libgravatar
  libksieve
  calendarsupport
  messagelib
  eventviews
  mailcommon
  incidenceeditor
  kdepim-addons
  kdepim-runtime
  kdepim
  kleopatra
 )

if [ -z $1 ]
then
  export BUILD_TYPE="rel"
elif [ $1 == "git" ]
then
  export BUILD_TYPE="git"
fi

for kdepim in ${kdepims[@]}
do
  case $(basename $0) in
    build${kdepim} )
      export PKGNAME=${kdepim}

      if [ ${PKGNAME} == "libkgapi" ]
      then
        export PKGVER=${LIBKGAPI_PKGVER}
        export PKGTAR=${PKGNAME}-${PKGVER}.tar.xz
        export PKGURL="http://download.kde.org/stable/${PKGNAME}/${PKGVER}/src/${PKGTAR}"
      else
        export PKGTAR=${PKGNAME}-${PKGVER}.tar.xz
        export PKGURL="http://download.kde.org/stable/applications/${PKGVER}/src/${PKGTAR}"
      fi
      if [ ${BUILD_TYPE} == "git" ]
      then
        export PKGDIR=${kdepim}
      fi
    ;;
  esac
done

if [ ${PKGNAME} == "akonadi" ]
then
  CMAKE_FLAGS+=(-DCXX_STDLIB=libc++)
fi

if [ ${BUILD_TYPE} == "git" ]
then
  prepare_src_override() {
    if [ -d ${PKGNAME} ]
    then
      pushd ${PKGNAME}
        git clean -fdx
        git fetch origin
        git reset --hard origin/master
      popd
    else
      git clone git://anongit.kde.org/${PKGNAME}.git
    fi

    if [ ${PKGNAME} == "akonadi" ]
    then
      export PKGVER=$(grep -m 1 AKONADI_VERSION ${PKGNAME}/CMakeLists.txt | cut -d \" -f2)
    elif [ ${PKGNAME} == "akonadi-search" ]
    then
      export PKGVER=$(grep -m 1 AKONADISEARCH_VERSION ${PKGNAME}/CMakeLists.txt | cut -d \" -f2)
    elif [ ${PKGNAME} == "kdepim" ]
    then
      export PKGVER=$(grep -m 1 KDEPIM_VERSION_NUMBER ${PKGNAME}/CMakeLists.txt | cut -d \" -f2)
    elif [ ${PKGNAME} == "kdepim-addons" ]
    then
      export PKGVER=$(grep -m 1 KDEPIMADDONS_VERSION_NUMBER ${PKGNAME}/CMakeLists.txt | cut -d \" -f2)
    elif [ ${PKGNAME} == "kdepim-runtime" ]
    then
      export PKGVER=$(grep -m 1 KDEPIM_RUNTIME_VERSION_NUMBER ${PKGNAME}/CMakeLists.txt | cut -d \" -f2)
    elif [ ${PKGNAME} == "kdepimlibs" ]
    then
      export PKGVER=$(grep -m 1 KDEPIMLIBS_VERSION ${PKGNAME}/akonadi-contact/CMakeLists.txt | cut -d \" -f2)
    elif [ ${PKGNAME} == "kleopatra" ]
    then
      export PKGVER=$(grep -m 1 kleopatra_version ${PKGNAME}/CMakeLists.txt | awk '{print $2}' | sed "s:)::g")
    else
      export PKGVER=$(grep -m 1 _LIB_VERSION ${PKGNAME}/CMakeLists.txt | cut -d \" -f2)
    fi

    export DEST=/binary/kdepim/${PKGNAME}-${PKGVER}

    if [ -d ${PKGBUILD} ]
    then
      echo "Old build dir exists. Removing"
      rm -rf ${PKGBUILD}
    fi

    install -dm755 ${PKGBUILD}

    if [ -e ${DEST} ]
    then
      if [ ${PKG_BUILDING} != 1 ]
      then
        echo "Warning: Old package installation dir exits. Removing."
        rm -rf ${DEST}
      fi
    fi

    export PKG_BUILDING=1
  }
fi

if [ -z ${DEST} ]
then
  export DEST=/binary/kdepim/${PKGNAME}-${PKGVER}
fi

. $(dirname $0)/master.sh
