#!/bin/bash -e

tar xf git/llvm.tar.xz
tar xf git/clang.tar.xz
tar xf git/compiler-rt.tar.xz

for dir in llvm clang compiler-rt
do
  pushd $dir
  svn up
  popd
done

pushd llvm
export VER=$(svn info | grep "Revision:" | awk '{print $2}')
popd

rm -rf llvm/tools/clang
rm -rf llvm/projects/compiler-rt

mv compiler-rt llvm/projects/compiler-rt

cp -a llvm llvm-32

mv clang llvm/tools/clang

cd llvm

sed -e 's:\$(PROJ_prefix)/docs/llvm:$(PROJ_prefix)/share/doc/llvm:' \
    -i Makefile.config.in

sed -i "/ld-linux-x86-64/s/lib64/lib/" tools/clang/lib/Driver/Tools.cpp

CFLAGS="-march=native -mtune=native -O2 -pipe -fstack-protector-strong"   \
CXXFLAGS="-march=native -mtune=native -O2 -pipe -fstack-protector-strong" \
CC="gcc" CXX="g++" ./configure --prefix=/usr --sysconfdir=/etc  --enable-shared   \
                               --enable-libffi --enable-targets=x86,r600          \
                               --disable-expensive-checks --disable-debug-runtime \
                               --disable-assertions --enable-optimized

make -j4
make -C docs -f Makefile.sphinx man

make install DESTDIR=/binary/llvm-${VER}

rm -rf /binary/llvm-${VER}/usr/lib/LLVMHello.so
rm -rf /binary/llvm-${VER}/usr/share/doc

chmod 644 /binary/llvm-${VER}/usr/lib/*.a
chmod 755 /binary/llvm-${VER}/usr/lib/*.so

mv /binary/llvm-${VER}/usr/include/llvm/Config/config.h /binary/llvm-${VER}/usr/include/llvm/Config/config-64.h
mv /binary/llvm-${VER}/usr/include/llvm/Config/llvm-config.h /binary/llvm-${VER}/usr/include/llvm/Config/llvm-config-64.h

cat > /binary/llvm-${VER}/usr/include/llvm/Config/config.h << "EOF"
#include <bits/wordsize.h>

#if __WORDSIZE == 32
#include "config-32.h"
#elif __WORDSIZE == 64
#include "config-64.h"
#else
#error "Unknown word size"
#endif
EOF

cat > /binary/llvm-${VER}/usr/include/llvm/Config/llvm-config.h << "EOF"
#include <bits/wordsize.h>

#if __WORDSIZE == 32
#include "llvm-config-32.h"
#elif __WORDSIZE == 64
#include "llvm-config-64.h"
#else
#error "Unknown word size"
#endif
EOF

mkdir -p /binary/llvm-${VER}/usr/share/man/man1
cp docs/_build/man/*.1 /binary/llvm-${VER}/usr/share/man/man1

mkdir -p /binary/llvm-${VER}/usr/lib/clang-analyzer

for _tool in scan-build scan-view; do
   cp -rf tools/clang/tools/$_tool /binary/llvm-${VER}/usr/lib/clang-analyzer/
   ln -sf ../lib/clang-analyzer/$_tool/$_tool /binary/llvm-${VER}//usr/bin/
done

ln -sf /usr/bin/clang /binary/llvm-${VER}/usr/lib/clang-analyzer/scan-build/
mv /binary/llvm-${VER}/usr/lib/clang-analyzer/scan-build/scan-build.1 /binary/llvm-${VER}/usr/share/man/man1/

python -m compileall /binary/llvm-${VER}/usr/lib/clang-analyzer
python -O -m compileall /binary/llvm-${VER}/usr/lib/clang-analyzer

cd ..

rm -rf llvm

cd llvm-32

sed -e 's:\$(PROJ_prefix)/lib:$(PROJ_prefix)/lib32:' \
    -e 's:\$(PROJ_prefix)/docs/llvm:$(PROJ_prefix)/share/doc/llvm:' \
    -i Makefile.config.in

sed -e '/ActiveLibDir = ActivePrefix/s:lib:lib32:' \
    -i tools/llvm-config/llvm-config.cpp

export CC="gcc -m32"
export CXX="g++ -m32"
export PKG_CONFIG_PATH=/usr/lib32/pkgconfig

CFLAGS="-march=native -mtune=native -O2 -pipe -fstack-protector-strong"   \
CXXFLAGS="-march=native -mtune=native -O2 -pipe -fstack-protector-strong" \
./configure --prefix=/usr --sysconfdir=/etc --libdir=/usr/lib32       \
            --enable-shared --enable-libffi --enable-targets=x86,r600 \
            --disable-expensive-checks --disable-debug-runtime        \
            --disable-assertions --enable-optimized                   \
            --host=i386-pc-linux-gnu --target=i386-pc-linux-gnu

make -j4
make install DESTDIR=/binary/llvm32

rm -rf /binary/llvm32/usr/lib32/LLVMHello.so

chmod 644 /binary/llvm32/usr/lib32/*.a
chmod 755 /binary/llvm32/usr/lib32/*.so

mv /binary/llvm32/usr/bin/i386-pc-linux-gnu-llvm-config /binary/llvm-${VER}/usr/bin/llvm-config32

mv /binary/llvm32/usr/include/llvm/Config/config.h /binary/llvm-${VER}/usr/include/llvm/Config/config-32.h
mv /binary/llvm32/usr/include/llvm/Config/llvm-config.h /binary/llvm-${VER}/usr/include/llvm/Config/llvm-config-32.h

mv /binary/llvm32/usr/lib32 /binary/llvm-${VER}/usr/

rm -rf /binary/llvm32

cd ..

rm -rf llvm-32

unset CC CXX PKG_CONFIG_PATH

pushd /binary/llvm-${VER}/
find * -type f 2>/dev/null | while read BUILD_BINARY ; do
  case "$(file -bi "${BUILD_BINARY}")" in *application/x-sharedlib* | *application/x-executable*)
    strip --strip-unneeded ${BUILD_BINARY}
  esac
done

find * -type f -name "*.a" | xargs strip --strip-unneeded

popd

cat > /binary/llvm-${VER}/INSTALL << "EOF"
#!/bin/bash

cp -rf --remove-destination usr /

[ -x /usr/bin/mandb ] && echo "Processing triggers for man-db" && /usr/bin/mandb -q
[ -x /sbin/ldconfig ] && echo "Processing triggers for glibc" && /sbin/ldconfig
EOF

chmod 755 /binary/llvm-${VER}/INSTALL

unset VER
