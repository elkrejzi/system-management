#!/bin/bash -e

export VER=2.1.26
export DEST=/binary/cyrus-sasl-${VER}

pushd cyrus-sasl-${VER}

patch -Np1 -i /media/ntfs/Other/Linux/patches/cyrus-sasl-2.1.26-fixes-1.patch

autoreconf -fi

pushd saslauthd
autoreconf -fi
popd

CFLAGS="-march=native -mtune=native -O2 -pipe -fstack-protector-strong "   \
CXXFLAGS="-march=native -mtune=native -O2 -pipe -fstack-protector-strong " \
./configure --prefix=/usr \
            --sysconfdir=/etc \
            --with-dbpath=/var/lib/sasl/sasldb2 \
            --with-saslauthd=/var/run/saslauthd \
            --with-sqlite3=/usr \
            --enable-login \
            --enable-ntlm \
            --enable-sql \
            --enable-auth-sasldb \
            --with-ldap \
            --enable-ldapdb

make
make install DESTDIR=${DEST}

popd

rm -rf cyrus-sasl-${VER}

find ${DEST} -name "*.la" -delete

sed -i "s:libdir =:exec_prefix=/usr\n&:" ${DEST}/usr/lib/pkgconfig/libsasl2.pc

mkdir -p ${DEST}/etc/default ${DEST}/etc/systemd/system/multi-user.target.wants
mkdir -p ${DEST}/lib/systemd/system ${DEST}/usr/lib/tmpfiles.d

cat > ${DEST}/etc/default/saslauthd << "EOF"
# Begin /etc/default/saslauthd

# Which authentication mechanisms should saslauthd use? (default: pam)
#
# Available options in this package:
# getpwent  -- use the getpwent() library function
# kerberos5 -- use Kerberos 5
# pam       -- use PAM
# rimap     -- use a remote IMAP server
# shadow    -- use the local shadow password file
# sasldb    -- use the local sasldb database file
# ldap      -- use LDAP (configuration is in /etc/saslauthd.conf)
#
# Only one option may be used at a time. See the saslauthd man page
# for more information.
#
# Example: MECHANISMS="shadow"
MECHANISMS="pam"

# Additional options for this mechanism. (default: none)
# See the saslauthd man page for information about mech-specific options.
# Note: Specify "-O options" in the following variable or saslauthd will fail.
MECH_OPTIONS=""

# How many saslauthd processes should we run? (default: 5)
# A value of 0 will fork a new process for each connection.
THREADS=5

# Other options (default: -c -m /var/run/saslauthd)
# Note: You MUST specify the -m option or saslauthd won't run!
#
# See the saslauthd man page and the output of 'saslauthd -h' for general
# information about these options.
SASLAUTHD_OPTS="-c -m /run/saslauthd"

# End /etc/default/saslauthd
EOF

cat > ${DEST}/usr/lib/tmpfiles.d/saslauthd.conf << "EOF"
d /run/saslauthd 755 root root -
EOF

cat > ${DEST}/lib/systemd/system/saslauthd.service << "EOF"
[Unit]
Description=Cyrus SASL authentication daemon

[Service]
Type=forking
EnvironmentFile=/etc/default/saslauthd
ExecStart=/usr/sbin/saslauthd -a $MECHANISMS -n $THREADS $MECH_OPTIONS $SASLAUTHD_OPTS
PIDFile=/run/saslauthd/saslauthd.pid

[Install]
WantedBy=multi-user.target
EOF

ln -sf /lib/systemd/system/saslauthd.service ${DEST}/etc/systemd/system/multi-user.target.wants/saslauthd.service

pushd ${DEST}

find * -type f 2>/dev/null | while read BUILD_BINARY ; do
  case "$(file -bi "${BUILD_BINARY}")" in *application/x-sharedlib* | *application/x-executable*)
    strip --strip-unneeded ${BUILD_BINARY}
  esac
done

popd

cat > ${DEST}/INSTALL << "EOF"
#!/bin/bash

for dir in etc lib usr ; do cp -rf --remove-destination $dir / ; done

install -dm700 /var/lib/sasl

if [ ! -e /var/lib/sasl/sasldb2 ]; then
   echo '!' | saslpasswd2 -c 'no:such:user'
   saslpasswd2 -d 'no:such:user'
fi

chmod 700 /var/lib/sasl/sasldb2
chown root:root /var/lib/sasl/sasldb2

if [ ! -d /run/saslauthd ]; then
   install -d -o root -g root -m 755 /run/saslauthd
fi

[ -x /usr/bin/mandb ] && echo "Processing triggers for man-db" && /usr/bin/mandb -q
[ -x /sbin/ldconfig ] && echo "Processing triggers for glibc" && /sbin/ldconfig
EOF

chmod 755 ${DEST}/INSTALL
