#!/bin/bash -e

export VER=3.2.1
export DEST=/binary/libffi-${VER}

pushd libffi-${VER}
  patch -Np1 -i /media/ntfs/Other/Linux/patches/libffi.patch
popd

cp -a libffi-${VER} libffi-${VER}-32

pushd libffi-${VER}

CFLAGS="-march=native -mtune=native -O2 -pipe -fstack-protector-strong "   \
CXXFLAGS="-march=native -mtune=native -O2 -pipe -fstack-protector-strong " \
./configure --prefix=/usr --disable-static

make -j4
make install DESTDIR=${DEST}

popd

pushd libffi-${VER}-32

export CC="gcc -m32"
export CXX="g++ -m32"
export PKG_CONFIG_PATH=/usr/lib32/pkgconfig

CFLAGS="-march=native -mtune=native -O2 -pipe -fstack-protector-strong "   \
CXXFLAGS="-march=native -mtune=native -O2 -pipe -fstack-protector-strong " \
./configure --prefix=/usr       \
            --libdir=/usr/lib32 \
            --disable-static

make -j4
make install DESTDIR=${PWD}/dest

mv dest/usr/lib32 ${DEST}/usr

popd

rm -rf libffi-${VER} libffi-${VER}-32

find ${DEST} -name "*.la" -delete

rm -rf ${DEST}/usr/share/info/dir
gzip -9 ${DEST}/usr/share/info/*

pushd ${DEST}

find * -type f 2>/dev/null | while read BUILD_BINARY ; do
  case "$(file -bi "${BUILD_BINARY}")" in *application/x-sharedlib* | *application/x-executable*)
    strip --strip-unneeded ${BUILD_BINARY}
  esac
done

popd

cat > ${DEST}/INSTALL << "EOF"
#!/bin/bash

cp -rf --remove-destination usr /

[ -x /usr/bin/install-info ] && echo "Processing triggers for texinfo" && for file in usr/share/info/* ; do /usr/bin/install-info /$file /usr/share/info/dir ; done
[ -x /usr/bin/mandb ] && echo "Processing triggers for man-db" && /usr/bin/mandb -q
[ -x /sbin/ldconfig ] && echo "Processing triggers for glibc" && /sbin/ldconfig
EOF

chmod 755 ${DEST}/INSTALL
