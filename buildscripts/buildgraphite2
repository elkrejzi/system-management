#!/bin/bash -e

export VER=1.2.4
export DEST=/binary/graphite2-${VER}

pushd graphite2-${VER}

sed -i "s:share/graphite2:lib\${LIB_SUFFIX}/graphite2:" src/CMakeLists.txt

mkdir build64 && pushd build64

cmake -DCMAKE_BUILD_TYPE=Release  \
      -DCMAKE_INSTALL_PREFIX=/usr \
      -DCMAKE_C_FLAGS="-march=native -mtune=native -O2 -pipe -fstack-protector-strong "   \
      -DCMAKE_CXX_FLAGS="-march=native -mtune=native -O2 -pipe -fstack-protector-strong " \
      -Wno-dev ..

make -j4
make install DESTDIR=${DEST}

popd

mkdir build32 && pushd build32

export CC="gcc -m32"
export CXX="g++ -m32"
export PKG_CONFIG_PATH=/usr/lib32/pkgconfig

cmake -DCMAKE_BUILD_TYPE=Release  \
      -DCMAKE_INSTALL_PREFIX=/usr \
      -DLIB_SUFFIX=32             \
      -DCMAKE_C_FLAGS="-march=native -mtune=native -O2 -pipe -fstack-protector-strong "   \
      -DCMAKE_CXX_FLAGS="-march=native -mtune=native -O2 -pipe -fstack-protector-strong " \
      -Wno-dev ..

make -j4
make install DESTDIR=${PWD}/dest

mv dest/usr/lib32 ${DEST}/usr
popd

popd

rm -rf graphite2-${VER}

find ${DEST} -name "*.la" -delete

pushd ${DEST}

find * -type f 2>/dev/null | while read BUILD_BINARY ; do
  case "$(file -bi "${BUILD_BINARY}")" in *application/x-sharedlib* | *application/x-executable*)
    strip --strip-unneeded ${BUILD_BINARY}
  esac
done

popd

cat > ${DEST}/INSTALL << "EOF"
#!/bin/bash

cp -rf --remove-destination usr /

[ -x /sbin/ldconfig ] && echo "Processing triggers for glibc" && /sbin/ldconfig
EOF

chmod 755 ${DEST}/INSTALL
