#!/bin/bash -e

export VER=1.1.3
export DEST=/binary/lxc-${VER}

pushd lxc-${VER}

CFLAGS="-march=sandybridge -fomit-frame-pointer -O2 -pipe -fstack-protector-strong"   \
CXXFLAGS="-march=sandybridge -fomit-frame-pointer -O2 -pipe -fstack-protector-strong" \
./configure --prefix=/usr        \
            --sysconfdir=/etc    \
            --localstatedir=/var \
            --with-init-script=systemd \
            --with-systemdsystemunitdir=/lib/systemd/system

make -j4
make install DESTDIR=${DEST}

popd

rm -rf lxc-${VER}

rm -rf ${DEST}/etc/bash_completion.d ${DEST}/usr/share/doc

install -dm755 ${DEST}/lib/systemd/system ${DEST}/usr/lib/tmpfiles.d

cat > ${DEST}/lib/systemd/system/lxc-auto.service << "EOF"
[Unit]
Description=Autostart LXC Container
After=network.target

[Service]
Type=forking
ExecStart=/usr/bin/lxc-autostart
ExecStop=/usr/bin/lxc-autostart -s
Delegate=true

[Install]
WantedBy=multi-user.target
EOF

cat > ${DEST}/lib/systemd/system/lxc@.service << "EOF"
[Unit]
Description=%i LXC
After=network.target

[Service]
Type=forking
ExecStart=/usr/bin/lxc-start -d -n %i
ExecStop=/usr/bin/lxc-stop -n %i
Delegate=true

[Install]
WantedBy=multi-user.target
EOF

cat > ${DEST}/usr/lib/tmpfiles.d/lxc.conf << "EOF"
w /sys/fs/cgroup/memory/memory.use_hierarchy - - - - 1
EOF

pushd ${DEST}

find * -type f 2>/dev/null | while read BUILD_BINARY ; do
  case "$(file -bi "${BUILD_BINARY}")" in *application/x-sharedlib* | *application/x-executable*)
    strip --strip-unneeded ${BUILD_BINARY}
  esac
done

popd

cat > ${DEST}/INSTALL << "EOF"
#!/bin/bash

for dir in etc lib usr var ; do cp -rf --remove-destination $dir / ; done

[ -x /usr/bin/mandb ] && echo "Processing triggers for man-db" && /usr/bin/mandb -q
[ -x /sbin/ldconfig ] && echo "Processing triggers for glibc" && /sbin/ldconfig
EOF

chmod 755 ${DEST}/INSTALL
