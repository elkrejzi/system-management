#!/bin/bash -e

export VER=20141126
export DEST=/binary/fontforge-2.0-${VER}

pushd fontforge-${VER}

#rm -rf libltdl m4

#./bootstrap

CFLAGS="-march=native -mtune=native -O2 -pipe -fstack-protector-strong"   \
CXXFLAGS="-march=native -mtune=native -O2 -pipe -fstack-protector-strong" \
./configure --prefix=/usr --disable-static

make -j4
make install DESTDIR=${DEST}

install -dm755 ${DEST}/usr/share/icons

rm -rf desktop/icons/src
cp -rf desktop/icons ${DEST}/usr/share/icons/hicolor

install -Dm644 desktop/fontforge.desktop ${DEST}/usr/share/applications/fontforge.desktop
install -Dm644 desktop/fontforge.xml ${DEST}/usr/share/mime/packages/fontforge.xml

popd

rm -rf fontforge-${VER}

find ${DEST} -name "*.la" -delete

rm -rf ${DEST}/usr/share/doc

pushd ${DEST}

find * -type f 2>/dev/null | while read BUILD_BINARY ; do
  case "$(file -bi "${BUILD_BINARY}")" in *application/x-sharedlib* | *application/x-executable*)
    strip --strip-unneeded ${BUILD_BINARY}
  esac
done

popd

cat > ${DEST}/INSTALL << "EOF"
#!/bin/bash

cp -rf --remove-destination usr /

[ -x /usr/bin/update-mime-database ] && echo "Processing triggers for shared-mime-info" && /usr/bin/update-mime-database /usr/share/mime
[ -x /usr/bin/gtk-update-icon-cache ] && echo "Processing triggers for hicolor-icon-theme" && /usr/bin/gtk-update-icon-cache -qf /usr/share/icons/hicolor
[ -x /usr/bin/update-desktop-database ] && echo "Processing triggers for desktop-file-utils" && /usr/bin/update-desktop-database
[ -x /usr/bin/mandb ] && echo "Processing triggers for man-db" && /usr/bin/mandb -q
[ -x /sbin/ldconfig ] && echo "Processing triggers for glibc" && /sbin/ldconfig
EOF

chmod 755 ${DEST}/INSTALL
