#!/bin/bash -e

export VER=5.1.0
#export VER=5.0.1-RC-20150418
export PKGVER=${VER}
#export PKGVER="5.0.1 20150418"
export DEST=/binary/gcc-${VER}

mv gcc-${VER} src

pushd src

sed -i 's@\./fixinc\.sh@-c true@' gcc/Makefile.in

sed -i 's/\(install.*:\) install-.*recursive/\1/' libffi/Makefile.in
sed -i 's/\(install-data-am:\).*/\1/' libffi/include/Makefile.in

patch -Np1 -i /media/ntfs/Other/Linux/patches/gcc-pure64.patch

if [ -f /media/ntfs/Other/Linux/patches/gcc-fixes.patch ]; then
   patch -Np1 -i /media/ntfs/Other/Linux/patches/gcc-fixes.patch
fi

popd

mkdir build

pushd build

SED=sed \
CFLAGS="-march=sandybridge -g -O2 -pipe -fstack-protector-strong"   \
CXXFLAGS="-march=sandybridge -g -O2 -pipe -fstack-protector-strong" \
../src/configure --prefix=/usr \
                 --libdir=/usr/lib \
                 --disable-bootstrap \
                 --disable-cloog-version-check \
                 --disable-libssp \
                 --disable-libstdcxx-pch \
                 --disable-libunwind-exceptions \
                 --enable-__cxa_atexit \
                 --enable-checking=release \
                 --enable-clocale=gnu \
                 --enable-gnu-unique-object \
                 --enable-install-libiberty \
                 --enable-languages=c,c++,fortran,lto,objc,obj-c++ \
                 --enable-linker-build-id \
                 --enable-lto \
                 --enable-multilib \
                 --enable-objc-gc \
                 --enable-plugin \
                 --enable-shared \
                 --enable-threads=posix \
                 --with-linker-hash-style=gnu \
                 --with-pkgversion='Krejzi ${PKGVER}' \
                 --with-system-zlib

make -j4
make install DESTDIR=${DEST}

install -m644 libiberty/pic/libiberty.a ${DEST}/usr/lib

install -dm755 ${DEST}/usr/lib/bfd-plugins

ln -sf ../../libexec/gcc/$(gcc/xgcc -dumpmachine)/$(cat ../src/gcc/BASE-VER)/liblto_plugin.so ${DEST}/usr/lib/bfd-plugins/

popd

rm -rf src build

find ${DEST} -name "*.la" -delete

rm -rf ${DEST}/usr/share/info/dir ${DEST}/usr/share/info/*.gz
gzip -9 ${DEST}/usr/share/info/*

install -dm755 ${DEST}/lib

mv ${DEST}/usr/lib/libgcc_s.so.1 ${DEST}/lib/
ln -sf ../../lib/libgcc_s.so.1 ${DEST}/usr/lib/libgcc_s.so

chmod 755 ${DEST}/lib/*
chmod 755 ${DEST}/usr/lib32/libgcc_s.so.1

ln -sf ../usr/bin/cpp ${DEST}/lib/cpp

pushd ${DEST}/usr/bin/
ln gcc cc
popd

rm -rf ${DEST}/usr/lib64

rm -rf ${DEST}/usr/lib{,32}/*.py
rm -rf ${DEST}/usr/share/gcc-*

install -dm755 ${DEST}-debug/usr/lib

pushd ${DEST}

find * -type f 2>/dev/null | while read BUILD_BINARY ; do
case "$(file -bi "${BUILD_BINARY}")" in *application/x-sharedlib* | *application/x-executable*)
mkdir -p usr/lib/debug/`dirname ${BUILD_BINARY}`
objcopy --only-keep-debug ${BUILD_BINARY} usr/lib/debug/${BUILD_BINARY}
strip --strip-unneeded ${BUILD_BINARY}
objcopy --add-gnu-debuglink=usr/lib/debug/${BUILD_BINARY} ${BUILD_BINARY}
esac
done

popd

mv ${DEST}/usr/lib/debug ${DEST}-debug/usr/lib

cat > ${DEST}/INSTALL << "EOF"
#!/bin/bash

for dir in lib usr ; do cp -rf --remove-destination $dir / ; done

[ -x /usr/bin/install-info ] && echo "Processing triggers for texinfo" && for file in usr/share/info/* ; do /usr/bin/install-info /$file /usr/share/info/dir ; done
[ -x /usr/bin/mandb ] && echo "Processing triggers for man-db" && /usr/bin/mandb -q
[ -x /sbin/ldconfig ] && echo "Processing triggers for glibc" && /sbin/ldconfig
EOF

chmod 755 ${DEST}/INSTALL
