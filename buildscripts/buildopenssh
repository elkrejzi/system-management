#!/bin/bash -e

export VER=6.8p1
export DEST=/binary/openssh-${VER}

pushd openssh-${VER}

CFLAGS="-march=sandybridge -fomit-frame-pointer -O2 -pipe -fstack-protector-strong"   \
CXXFLAGS="-march=sandybridge -fomit-frame-pointer -O2 -pipe -fstack-protector-strong" \
./configure --prefix=/usr \
            --sysconfdir=/etc/ssh \
            --localstatedir=/var \
            --with-mantype=doc \
            --with-4in6 \
            --with-privsep-path=/var/run/sshd \
            --with-kerberos5=/usr \
            --with-pam \
            --with-ssl-engine \
            --with-xauth=/usr/bin/xauth \
            --with-default-path=/usr/local/bin:/usr/bin:/bin \
            --with-superuser-path=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

make -j4
make install DESTDIR=${DEST}

install -m755 contrib/ssh-copy-id ${DEST}/usr/bin
install -m644 contrib/ssh-copy-id.1 ${DEST}/usr/share/man/man1

popd

rm -rf openssh-${VER}

sed -i "/OpenBSD/d" ${DEST}/etc/ssh/moduli

rm -rf ${DEST}/var

install -dm755 ${DEST}/etc/systemd/system/sockets.target.wants \
               ${DEST}/lib/systemd/system \
               ${DEST}/usr/lib/tmpfiles.d \
               ${DEST}/etc/pam.d

cat > ${DEST}/etc/pam.d/sshd << "EOF"
# Begin /etc/pam.d/sshd

auth     required       pam_nologin.so
auth     optional       pam_group.so

auth     include        system-auth

account  required       pam_access.so
account  include        system-account

password include        system-password

session  required       pam_env.so
session  required       pam_limits.so
session  optional       pam_lastlog.so
session  optional       pam_motd.so
session  optional       pam_mail.so standard

session  include        system-session

# End /etc/pam.d/sshd
EOF

cat > ${DEST}/etc/ssh/ssh_config << "EOF"
# This is the ssh client system-wide configuration file.  See
# ssh_config(5) for more information.  This file provides defaults for
# users, and the values can be changed in per-user configuration files
# or on the command line.

# Configuration data is parsed as follows:
#  1. command line options
#  2. user-specific file
#  3. system-wide file
# Any configuration value is only changed the first time it is set.
# Thus, host-specific definitions should be at the beginning of the
# configuration file, and defaults at the end.

# Site-wide defaults for some commonly used options.  For a comprehensive
# list of available options, their meanings and defaults, please see the
# ssh_config(5) man page.

Host *
#   ForwardAgent no
#   ForwardX11 no
#   ForwardX11Trusted yes
#   RhostsRSAAuthentication no
#   RSAAuthentication yes
#   PasswordAuthentication yes
#   HostbasedAuthentication no
#   GSSAPIAuthentication no
#   GSSAPIDelegateCredentials no
#   GSSAPIKeyExchange no
#   GSSAPITrustDNS no
#   BatchMode no
#   CheckHostIP yes
#   AddressFamily any
#   ConnectTimeout 0
#   StrictHostKeyChecking ask
#   IdentityFile ~/.ssh/identity
#   IdentityFile ~/.ssh/id_rsa
#   IdentityFile ~/.ssh/id_dsa
#   Port 22
#   Protocol 2,1
#   Cipher 3des
#   Ciphers aes128-ctr,aes192-ctr,aes256-ctr,arcfour256,arcfour128,aes128-cbc,3des-cbc
#   MACs hmac-md5,hmac-sha1,umac-64@openssh.com,hmac-ripemd160
#   EscapeChar ~
#   Tunnel no
#   TunnelDevice any:any
#   PermitLocalCommand no
#   VisualHostKey no
#   ProxyCommand ssh -q -W %h:%p gateway.example.com
#   GSSAPIAuthentication yes
#   GSSAPIDelegateCredentials no
    SendEnv LANG LC_*
    HashKnownHosts yes
EOF

cat > ${DEST}/etc/ssh/sshd_config << "EOF"
# This is the sshd server system-wide configuration file.  See
# sshd_config(5) for more information.

# The strategy used for options in the default sshd_config shipped with
# OpenSSH is to specify options with their default value where
# possible, but leave them commented.  Uncommented options override the
# default value.

Port 22
#AddressFamily any
#ListenAddress 0.0.0.0
#ListenAddress ::

# The default requires explicit activation of protocol 1
Protocol 2

# HostKey for protocol version 1
#HostKey /etc/ssh/ssh_host_key
# HostKeys for protocol version 2
HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_dsa_key
HostKey /etc/ssh/ssh_host_ecdsa_key

# Lifetime and size of ephemeral version 1 server key
KeyRegenerationInterval 3600
ServerKeyBits 768

# Logging
SyslogFacility AUTH
LogLevel INFO

# Authentication:

LoginGraceTime 120
PermitRootLogin yes
StrictModes yes

RSAAuthentication yes
PubkeyAuthentication yes

# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2
# but this is overridden so installations will only check .ssh/authorized_keys
#AuthorizedKeysFile	.ssh/authorized_keys

# For this to work you will also need host keys in /etc/ssh/ssh_known_hosts
RhostsRSAAuthentication no
# similar for protocol version 2
HostbasedAuthentication no
# Change to yes if you don't trust ~/.ssh/known_hosts for
# RhostsRSAAuthentication and HostbasedAuthentication
#IgnoreUserKnownHosts yes

# Don't read the user's ~/.rhosts and ~/.shosts files
IgnoreRhosts yes

# Change to no to disable tunnelled clear text passwords
PasswordAuthentication no

# To enable empty passwords, change to yes (NOT RECOMMENDED)
PermitEmptyPasswords no

# Change to no to disable s/key passwords
ChallengeResponseAuthentication no

# Kerberos options
#KerberosAuthentication no
#KerberosOrLocalPasswd yes
#KerberosTicketCleanup yes
#KerberosGetAFSToken no

# GSSAPI options
#GSSAPIAuthentication no
#GSSAPICleanupCredentials yes
#GSSAPIStrictAcceptorCheck yes
#GSSAPIKeyExchange no

# Set this to 'yes' to enable PAM authentication, account processing,
# and session processing. If this is enabled, PAM authentication will
# be allowed through the ChallengeResponseAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via ChallengeResponseAuthentication may bypass
# the setting of "PermitRootLogin without-password".
# If you just want the PAM account and session checks to run without
# PAM authentication, then enable this but set PasswordAuthentication
# and ChallengeResponseAuthentication to 'no'.
UsePAM yes

X11Forwarding yes
X11DisplayOffset 10
PrintMotd yes
PrintLastLog yes
TCPKeepAlive yes
#UseLogin no

# For security
UsePrivilegeSeparation yes

#MaxStartups 10:30:60
#Banner /etc/issue.net

Subsystem sftp /usr/libexec/sftp-server
EOF

cat > ${DEST}/usr/lib/tmpfiles.d/sshd.conf << "EOF"
d /run/sshd 755 root root -
EOF

cat > ${DEST}/lib/systemd/system/sshd.service << "EOF"
[Unit]
Description=OpenSSH Daemon

[Service]
ExecStart=/usr/sbin/sshd -D
ExecReload=/bin/kill -HUP $MAINPID
KillMode=process
Restart=always

[Install]
WantedBy=multi-user.target
EOF

cat > ${DEST}/lib/systemd/system/sshd@.service << "EOF"
[Unit]
Description=SSH Per-Connection Server

[Service]
ExecStart=/usr/sbin/sshd -i
StandardInput=socket
StandardError=syslog
EOF

cat > ${DEST}/lib/systemd/system/sshd.socket << "EOF"
[Unit]
Conflicts=sshd.service

[Socket]
ListenStream=22
Accept=yes

[Install]
WantedBy=sockets.target
EOF

ln -sf /lib/systemd/system/sshd.socket ${DEST}/etc/systemd/system/sockets.target.wants/sshd.socket

pushd ${DEST}

find * -type f 2>/dev/null | while read BUILD_BINARY ; do
  case "$(file -bi "${BUILD_BINARY}")" in *application/x-sharedlib* | *application/x-executable*)
    strip --strip-unneeded ${BUILD_BINARY}
  esac
done

popd

cat > ${DEST}/INSTALL << "EOF"
#!/bin/bash

for dir in etc lib usr ; do cp -rf --remove-destination $dir / ; done

getent group sshd > /dev/null || groupadd -g 50 sshd
getent passwd sshd > /dev/null || useradd -c "OpenSSH PrivSep" -d /var/run/sshd -g sshd -s /sbin/nologin -u 50 sshd

chmod 4711 /usr/libexec/ssh-keysign

/usr/bin/ssh-keygen -A

[ -x /usr/bin/mandb ] && echo "Processing triggers for man-db" && /usr/bin/mandb -q
EOF

chmod 755 ${DEST}/INSTALL
