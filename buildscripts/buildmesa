#!/bin/bash -e

export PKGNAME=mesa
export PKGVER=13.0.0-rc1

if [ $(basename $0) == "buildmesa-git" ]
then
  prepare_src_override() {
    export PKGDIR=${PKGNAME}
    export PKGBUILD=${PKGDIR}

    if [ ${MULTILIB} == 0 ]
    then
      if [ -e ${PKGDIR} ] || [ -e ${PKGBUILD} ]
      then
        if [ -z ${RECURSIVE_CALL} ]
        then
          echo "Warning: Old source and/or build dir exists. Removing."
          rm -rf ${PKGDIR} ${PKGBUILD}
        fi
      fi

      if [ -e git/${PKGNAME}.tar.xz ]
      then
        tar xf git/${PKGNAME}.tar.xz
        pushd ${PKGNAME}
          git fetch origin
          git reset --hard origin/master
          git checkout 8e3e9d74b54dc9dda0432f69fdbb2eab5969cc8a
        popd
      else
        git clone git://anongit.freedesktop.org/mesa/mesa
      fi

      pushd ${PKGDIR}
        export PKGVER="$(cat VERSION | sed s/-devel//)-$(git describe | cut -d - -f 4)"
        #autoreconf -fi
      popd

      if [ -z ${DEST_SET} ]
      then
        export DEST=/binary/${PKGNAME}-${PKGVER}
        export DEST_SET=1
      fi

      if [ -e ${DEST} ] || [ -e ${DEST}-debug ]
      then
        if [ ${PKG_BUILDING} != 1 ]
        then
          echo "Warning: Old package installation dir exits. Removing."
          rm -rf ${DEST} ${DEST}-debug
        fi
      fi

      export PKG_BUILDING=1

      cp -a ${PKGDIR} ${PKGDIR}-checkout
    else
      mv ${PKGDIR}-checkout ${PKGDIR}
    fi
  }
else
  export PKGTAR=${PKGNAME}-${PKGVER}.tar.xz
  export PKGURL="ftp://ftp.freedesktop.org/pub/mesa/${PKGVER%-rc?}/${PKGTAR}"
fi

export MAKE_JOBS_FLAGS="-j4"
export DEBUG_BUILD=1
export MULTILIB_BUILD=1
export PATCHES_LIST=("mesalib-xdemos.patch" "mesa-pthread-stubs.patch")
export PATCHES_LIST_32=("mesalib-xdemos.patch" "mesa-pthread-stubs.patch")
export DLOPEN_LIBS="-ldl"

configure_pre() {
  autoreconf -fi
  sed -i "/stdint.h/a #include <string.h>" src/util/bitscan.h
}

configure_pre_32() {
  export LDFLAGS="-lcompiler-rt"
  export LLVM_CONFIG=/usr/bin/llvm-config32

  autoreconf -fi
  sed -i "/stdint.h/a #include <string.h>" src/util/bitscan.h
}

make_post() {
  make -C xdemos
}

make_post_32() {
  make -C xdemos EXT=32 CC="${CC}"
}

make_install_post() {
  make -C xdemos install DESTDIR=${DEST}

  rm -rf ${DEST}/usr/include/vulkan/vk_platform.h
  rm -rf ${DEST}/usr/include/vulkan/vulkan.h
}

make_install_post_32() {
  install -m755 xdemos/glxinfo32 ${DEST}/usr/bin
  install -m755 xdemos/glxgears32 ${DEST}/usr/bin
}

export COMMON_FLAGS=(--disable-valgrind
                     --disable-xvmc
                     --enable-texture-float
                     --enable-gles1
                     --enable-gles2
                     --enable-gbm
                     --enable-vdpau
                     --enable-omx
                     --enable-va
                     --enable-glx-tls
                     --enable-llvm-shared-libs
                     --with-dri-drivers=i965
                     --with-egl-platforms=drm,x11,wayland
                     --with-gallium-drivers=radeonsi,swrast
                     --with-vulkan-drivers=intel)

export CONFIGURE_FLAGS=("${COMMON_FLAGS[@]}")
export CONFIGURE_FLAGS_32=("${COMMON_FLAGS[@]}"
                           --build=i686-pc-linux-gnu
                           --host=i686-pc-linux-gnu)

. $(dirname $0)/master.sh
