#!/bin/bash -e

export VER=2.38.0
export DEST=/binary/graphviz-${VER}

pushd graphviz-${VER}

if [ -e /usr/bin/luac ]; then
  export LUADEST=$(pkg-config --variable=INSTALL_CMOD lua)
fi

if [ -e /usr/bin/perl ]; then
  export PERLDEST=$(perl ${PWD}/config/config_perl.pl PERL_INSTALL_DIR)
fi

if [ -e /usr/bin/php-config ]; then
  export PHPDEST=$(php-config --extension-dir)
fi

if [ -e /usr/bin/python ]; then
  export PYTHONDEST=$(python -c "from distutils.sysconfig import get_python_lib; print(get_python_lib())")
fi

if [ -e /usr/bin/ruby ]; then
  export RUBYDEST=$(ruby ${PWD}/config/config_ruby.rb vendorarchdir)
fi

if [ -e /usr/bin/tclsh ]; then
  export TCLVER=$(pkg-config --modversion tcl)
  export TCLDEST=/usr/lib/tcl${TCLVER}
fi

sed -i "s:ruby-1.9:ruby-2.2:g" -i configure

export C_INCLUDE_PATH=/usr/lib/java/include:/usr/lib/java/include/linux
export CPLUS_INCLUDE_PATH=$C_INCLUDE_PATH

CFLAGS="-march=sandybridge -fomit-frame-pointer -O2 -pipe -fstack-protector-strong"   \
CXXFLAGS="-march=sandybridge -fomit-frame-pointer -O2 -pipe -fstack-protector-strong" \
./configure --prefix=/usr

make -j4
make install DESTDIR=${DEST}

popd

rm -rf graphviz-${VER}

find ${DEST} -name "*.la" -delete

rm -rf ${DEST}/usr/lib64
rm -rf ${DEST}/usr/lib/lua*
rm -rf ${DEST}/usr/lib/perl*
rm -rf ${DEST}/usr/lib/php*
rm -rf ${DEST}/usr/lib/python*
rm -rf ${DEST}/usr/lib/ruby*
rm -rf ${DEST}/usr/lib/tcl*

if [ -e ${DEST}/usr/lib/graphviz/lua ]; then
  mkdir -p ${DEST}${LUADEST}
  ln -sfr ${DEST}/usr/lib/graphviz/lua/gv.so ${DEST}${LUADEST}/
fi

if [ -e ${DEST}/usr/lib/graphviz/perl ]; then
  mkdir -p ${DEST}${PERLDEST}
  ln -sfr ${DEST}/usr/lib/graphviz/perl/gv.pm ${DEST}${PERLDEST}/
  ln -sfr ${DEST}/usr/lib/graphviz/perl/gv.so ${DEST}${PERLDEST}/
fi

if [ -e ${DEST}/usr/lib/graphviz/php ]; then
  mkdir -p ${DEST}${PHPDEST}
  ln -sfr ${DEST}/usr/lib/graphviz/php/gv.so ${DEST}${PHPDEST}/
fi

if [ -e ${DEST}/usr/lib/graphviz/python ]; then
  mkdir -p ${DEST}${PYTHONDEST}
  ln -sfr ${DEST}/usr/lib/graphviz/python/gv.py ${DEST}${PYTHONDEST}/
  ln -sfr ${DEST}/usr/lib/graphviz/python/_gv.so ${DEST}${PYTHONDEST}/
fi

if [ -e ${DEST}/usr/lib/graphviz/ruby ]; then
  mkdir -p ${DEST}${RUBYDEST}
  ln -sfr ${DEST}/usr/lib/graphviz/ruby/gv.so ${DEST}${RUBYDEST}/
fi

if [ -e ${DEST}/usr/lib/graphviz/tcl ]; then
  mkdir -p ${DEST}${TCLDEST}
  ln -sfr ${DEST}/usr/lib/graphviz/tcl ${DEST}${TCLDEST}/graphviz
fi

pushd ${DEST}

find * -type f 2>/dev/null | while read BUILD_BINARY ; do
  case "$(file -bi "${BUILD_BINARY}")" in *application/x-sharedlib* | *application/x-executable*)
    strip --strip-unneeded ${BUILD_BINARY}
  esac
done

popd

cat > ${DEST}/INSTALL << "EOF"
#!/bin/bash

cp -rf --remove-destination usr /

/usr/bin/dot -c

[ -x /usr/bin/mandb ] && echo "Processing triggers for man-db" && /usr/bin/mandb -q
[ -x /sbin/ldconfig ] && echo "Processing triggers for glibc" && /sbin/ldconfig
EOF

chmod 755 ${DEST}/INSTALL
