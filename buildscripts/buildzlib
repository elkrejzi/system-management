#!/bin/bash -e

VER=1.2.8
DEST=/binary/zlib-${VER}

cp -a zlib-${VER} zlib-${VER}-32

pushd zlib-${VER}

CFLAGS="-march=native -mtune=native -O2 -pipe -fstack-protector-strong "   \
CXXFLAGS="-march=native -mtune=native -O2 -pipe -fstack-protector-strong " \
./configure --prefix=/usr

make -j4
make install DESTDIR=${DEST}

popd

pushd zlib-${VER}-32

export CC="gcc -m32"
export CXX="g++ -m32"
export PKG_CONFIG_PATH=/usr/lib32/pkgconfig

CFLAGS="-march=native -mtune=native -O2 -pipe -fstack-protector-strong "   \
CXXFLAGS="-march=native -mtune=native -O2 -pipe -fstack-protector-strong " \
./configure --prefix=/usr --libdir=/usr/lib32

make -j4
make install DESTDIR=${PWD}/dest

mv ${PWD}/dest/usr/lib32 ${DEST}/usr

popd

rm -rf zlib-${VER} zlib-${VER}-32

install -dm755 ${DEST}/lib

mv ${DEST}/usr/lib/libz.so.* ${DEST}/lib
ln -sf ../../lib/$(readlink ${DEST}/usr/lib/libz.so) ${DEST}/usr/lib/libz.so

rm -rf ${DEST}/usr/*/*.a

pushd ${DEST}

find * -type f 2>/dev/null | while read BUILD_BINARY ; do
  case "$(file -bi "${BUILD_BINARY}")" in *application/x-sharedlib* | *application/x-executable*)
    strip --strip-unneeded ${BUILD_BINARY}
  esac
done

popd

cat > ${DEST}/INSTALL << "EOF"
#!/bin/bash

for dir in lib usr ; do cp -rf --remove-destination $dir / ; done

[ -x /usr/bin/mandb ] && echo "Processing triggers for man-db" && /usr/bin/mandb -q
[ -x /sbin/ldconfig ] && echo "Processing triggers for glibc" && /sbin/ldconfig
EOF

chmod 755 ${DEST}/INSTALL
