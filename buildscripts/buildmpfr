#!/bin/bash -e

export VER=3.1.2
export DEST=/binary/mpfr-${VER}

pushd mpfr-${VER}

if [ -f /media/ntfs/Other/Linux/patches/mpfr.patch ]; then
  patch -Np1 -i /media/ntfs/Other/Linux/patches/mpfr.patch
fi

CFLAGS="-march=native -mtune=native -g -O2 -pipe -fstack-protector-strong"   \
CXXFLAGS="-march=native -mtune=native -g -O2 -pipe -fstack-protector-strong" \
./configure --build=x86_64-unknown-linux-gnu  \
            --host=x86_64-unknown-linux-gnu   \
            --target=x86_64-unknown-linux-gnu \
            --prefix=/usr --disable-static    \
            --enable-thread-safe

make -j4
make install DESTDIR=${DEST}

popd

rm -rf mpfr-${VER}

find ${DEST} -name "*.la" -delete

rm -rf ${DEST}/usr/share/doc ${DEST}/usr/share/info/dir ${DEST}/usr/share/info/*.gz
gzip -9 ${DEST}/usr/share/info/*

cat > ${DEST}/INSTALL << "EOF"
#!/bin/bash

cp -rf --remove-destination usr /

[ -x /usr/bin/install-info ] && echo "Processing triggers for texinfo" && for file in usr/share/info/* ; do /usr/bin/install-info /$file /usr/share/info/dir ; done
[ -x /sbin/ldconfig ] && echo "Processing triggers for glibc" && /sbin/ldconfig
EOF

chmod 755 ${DEST}/INSTALL

pushd ${DEST}

find * -type f 2>/dev/null | while read BUILD_BINARY ; do
case "$(file -bi "${BUILD_BINARY}")" in *application/x-sharedlib* | *application/x-executable*)
mkdir -p usr/lib/debug/`dirname ${BUILD_BINARY}`
objcopy --only-keep-debug ${BUILD_BINARY} usr/lib/debug/${BUILD_BINARY}
strip --strip-unneeded ${BUILD_BINARY}
objcopy --add-gnu-debuglink=usr/lib/debug/${BUILD_BINARY} ${BUILD_BINARY}
esac
done

popd
