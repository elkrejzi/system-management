#!/bin/bash -e

export PKGVER=5.6.0
export MAKE_JOBS_FLAGS="-j4"
export DEBUG_BUILD=1
export NO_OPTIMIZATION=1
export MAKE_INSTALL_FLAGS="INSTALL_ROOT=\${DEST}"

case $(basename $0) in
  buildqtmodules )
    export PKG_AUTO_INSTALL=1

    $(dirname $0)/buildqtimageformats
    $(dirname $0)/buildqtscript
    $(dirname $0)/buildqtserialport
    $(dirname $0)/buildqtsvg
    $(dirname $0)/buildqtwayland
    $(dirname $0)/buildqtx11extras
    $(dirname $0)/buildqtxmlpatterns
    $(dirname $0)/buildqtdeclarative
    $(dirname $0)/buildqtconnectivity
    $(dirname $0)/buildqtgraphicaleffects
    $(dirname $0)/buildqtlocation
    $(dirname $0)/buildqtmultimedia
    $(dirname $0)/buildqtquickcontrols
    $(dirname $0)/buildqtquickcontrols2
    $(dirname $0)/buildqtsensors
    $(dirname $0)/buildqtserialbus
    $(dirname $0)/buildqttools
    $(dirname $0)/buildqtwebchannel
    $(dirname $0)/buildqtwebsockets
    $(dirname $0)/buildqtwebengine

    find /binary -name "INSTALL" -exec grep -rl "exit 0" {} \; | while read f ; do head --lines -2 ${f} > ${f}.new ; mv ${f}.new ${f} ; chmod 755 ${f} ; done

    exit 0
  ;;
esac

qtmodules=(
  qtimageformats
  qtscript
  qtserialport
  qtsvg
  qtwayland
  qtx11extras
  qtxmlpatterns
  qtdeclarative
  qtconnectivity
  qtgraphicaleffects
  qtlocation
  qtmultimedia
  qtquickcontrols
  qtquickcontrols2
  qtsensors
  qtserialbus
  qttools
  qtwebchannel
  qtwebsockets
  qtwebengine
)

for qtmodule in ${qtmodules[@]}
do
  case $(basename $0) in
    build${qtmodule} )
      export PKGNAME=${qtmodule}
    ;;
  esac
done

export PKGTAR=${PKGNAME}-opensource-src-${PKGVER}.tar.xz
export PKGDIR=${PKGNAME}-opensource-src-${PKGVER}

# stable
export PKGURL="http://download.qt.io/official_releases/qt/5.6/${PKGVER}/submodules/${PKGTAR}"

# development
export PKGURL="https://download.qt.io/development_releases/qt/5.6/${PKGVER}/submodules/${PKGTAR}"

if [ ${PKGNAME} == "qtwebengine" ]
then
  export PATCHES_LIST=("qtwebengine-nss.patch")

  configure_pre() {
    # No debug symbols for this module. Taken from Debian
    echo "QMAKE_CXXFLAGS -= -g" >> .qmake.conf
    echo "QMAKE_CXXFLAGS -= -gstabs" >> .qmake.conf
    echo "WEBENGINE_CONFIG += use_system_icu use_proprietary_codecs" >> .qmake.conf
    unset DEBUG_BUILD

    # git clone https://chromium.googlesource.com/v8/v8

    # pushd v8
    #   git checkout 71bde166b191f6a459827d9be11424405ba13414
    # popd

    # patch -Np1 -i /media/ntfs/Other/Linux/patches/chromium-libcxx.patch

    # tar cfJ v8.tar.xz v8

    pushd src/3rdparty/chromium
      rm -rf v8
      tar xf /media/ntfs/Other/Linux/v8.tar.xz
    popd

    sed -i "/linux-clang/a linux-clang-libc++: GYP_CONFIG += clang=1 host_clang=1 clang_use_chrome_plugins=0 make_clang_dir=/usr use_libcpp=1" src/core/config/desktop_linux.pri
    sed -i "/config.h/i #include <cstdlib>" src/3rdparty/chromium/third_party/WebKit/Source/platform/heap/GCInfo.cpp
  }
elif [ ${PKGNAME} == "qtserialbus" ]
then
  configure_pre() {
    sed -i "/unistd.h/i #include <errno.h>" src/plugins/canbus/socketcan/socketcanbackend.cpp
  }
fi



configure_override() {
  qmake
}

make_post() {
  find . -name "*.pc" -exec perl -pi -e "s, -L$PWD/?\S+,,g" {} \;
}

make_install_post() {
  find ${DEST}/usr/lib -name "*.prl" -exec sed -i -e '/^QMAKE_PRL_BUILD_DIR/d' {} \;

  if [ ${PKGNAME} == "qttools" ]
  then
    install -Dm644 src/assistant/assistant/images/assistant-128.png \
                   ${DEST}/usr/share/pixmaps/assistant.png
    install -Dm644 src/designer/src/designer/images/designer.png \
                   ${DEST}/usr/share/pixmaps/designer.png
    install -Dm644 src/linguist/linguist/images/icons/linguist-128-32.png \
                   ${DEST}/usr/share/pixmaps/linguist.png
    install -Dm644 src/qdbus/qdbusviewer/images/qdbusviewer-128.png \
                   ${DEST}/usr/share/pixmaps/qdbusviewer.png
    install -dm755 ${DEST}/usr/share/applications

cat > ${DEST}/usr/share/applications/assistant.desktop << "EOF"
[Desktop Entry]
Name=Qt5 Assistant
Comment=Shows Qt5 documentation and examples
Exec=assistant
Icon=assistant
Terminal=false
Encoding=UTF-8
Type=Application
Categories=Qt;Development;Documentation;
EOF
cat > ${DEST}/usr/share/applications/designer.desktop << "EOF"
[Desktop Entry]
Name=Qt5 Designer
GenericName=Interface Designer
Comment=Design GUIs for Qt5 applications
Exec=designer
Icon=designer
MimeType=application/x-designer;
Terminal=false
Encoding=UTF-8
Type=Application
Categories=Qt;Development;
EOF
cat > ${DEST}/usr/share/applications/linguist.desktop << "EOF"
[Desktop Entry]
Name=Qt5 Linguist
Comment=Add translations to Qt5 applications
Exec=linguist
Icon=linguist
MimeType=text/vnd.trolltech.linguist;application/x-linguist;
Terminal=false
Encoding=UTF-8
Type=Application
Categories=Qt;Development;
EOF
cat > ${DEST}/usr/share/applications/qdbusviewer.desktop << "EOF"
[Desktop Entry]
Name=Qt5 QDBusViewer
GenericName=D-Bus Debugger
Comment=Debug D-Bus applications
Exec=qdbusviewer
Icon=qdbusviewer
Terminal=false
Encoding=UTF-8
Type=Application
Categories=Qt;Development;Debugger;
EOF
  fi
}

. $(dirname $0)/master.sh
