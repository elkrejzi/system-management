#!/bin/bash -e

export PKGNAME=lightdm
export PKGVER=1.18.0
export PKGTAR=${PKGNAME}-${PKGVER}.tar.xz
export PKGURL="https://launchpad.net/lightdm/${PKGVER:0:4}/${PKGVER}/+download/${PKGTAR}"
export MAKE_JOBS_FLAGS="-j4"
export KEEP_EMPTY_DIRS=1
export CONFIGURE_FLAGS=(--disable-tests
                        --with-greeter-user=lightdm
                        --with-greeter-session=lightdm-gtk-greeter)
export POSTINST_TRIGGER=("getent group lightdm > /dev/null || groupadd -g 63 lightdm"
                         "getent passwd lightdm > /dev/null || useradd -c \"Light Display Manager\" -u 63 -g lightdm -d /var/lib/lightdm -s /sbin/nologin lightdm\n"
                         "chown -R lightdm:lightdm /var/lib/lightdm /var/lib/lightdm-data" "chown root:lightdm /var/log/lightdm\n"
                         "chmod 700 /usr/share/polkit-1/rules.d" "chmod 600 /usr/share/polkit-1/rules.d/*"
                         "chown -R polkitd:polkitd /usr/share/polkit-1/rules.d")

make_install_post() {
  sed -i "s:^#minimum-vt=.*:minimum-vt=1:" ${DEST}/etc/lightdm/lightdm.conf
  sed -i "s:^#run-directory=.*:run-directory=/run/lightdm:" ${DEST}/etc/lightdm/lightdm.conf
  sed -i "s:^#session-wrapper=.*:session-wrapper=/etc/lightdm/Xsession:" ${DEST}/etc/lightdm/lightdm.conf

  sed -i "/hidden-shells/s:/usr/sbin:/sbin:" ${DEST}/etc/lightdm/users.conf
  sed -i "s:minimum-uid=500:minimum-uid=1000:" ${DEST}/etc/lightdm/users.conf

  rm -rf ${DEST}/etc/apparmor.d ${DEST}/etc/init

  install -dm755 ${DEST}/usr/lib/tmpfiles.d ${DEST}/lib/systemd/system ${DEST}/var/cache/lightdm

  install -dm700 ${DEST}/usr/share/polkit-1/rules.d
  install -dm770 ${DEST}/var/lib/lightdm ${DEST}/var/lib/lightdm-data
  install -dm711 ${DEST}/var/log/lightdm

  chmod +t ${DEST}/var/cache/lightdm ${DEST}/var/lib/lightdm ${DEST}/var/lib/lightdm-data

cat > ${DEST}/etc/lightdm/Xsession << "EOF"
#!/bin/sh
#
# LightDM wrapper to run around X sessions.

echo "Running X session wrapper"

# Load profile
for file in "/etc/profile" "$HOME/.profile" "/etc/xprofile" "$HOME/.xprofile"; do
    if [ -f "$file" ]; then
        echo "Loading profile from $file";
        . "$file"
    fi
done

# Load resources
for file in "/etc/X11/Xresources" "$HOME/.Xresources"; do
    if [ -f "$file" ]; then
        echo "Loading resource: $file"
        xrdb -merge "$file"
    fi
done

# Load keymaps
for file in "/etc/X11/Xkbmap" "$HOME/.Xkbmap"; do
    if [ -f "$file" ]; then
        echo "Loading keymap: $file"
        setxkbmap `cat "$file"`
        XKB_IN_USE=yes
    fi
done

# Load xmodmap if not using XKB
if [ -z "$XKB_IN_USE" ]; then
    for file in "/etc/X11/Xmodmap" "$HOME/.Xmodmap"; do
        if [ -f "$file" ]; then
           echo "Loading modmap: $file"
           xmodmap "$file"
        fi
    done
fi

unset XKB_IN_USE

# Run all system xinitrc shell scripts
xinitdir="/etc/X11/xinit/xinitrc.d"
if [ -d "$xinitdir" ]; then
    for script in $xinitdir/*; do
        echo "Loading xinit script $script"
        if [ -x "$script" -a ! -d "$script" ]; then
            . "$script"
        fi
    done
fi

# Run user xsession shell script
script="$HOME/.xsession"
if [ -x "$script" -a ! -d "$script" ]; then
    echo "Loading xsession script $script"
    . "$script"
fi

echo "X session wrapper complete, running session $@"

exec $@
EOF

cat > ${DEST}/etc/pam.d/lightdm << "EOF"
# Begin /etc/pam.d/lightdm

auth     requisite      pam_nologin.so
auth     required       pam_env.so

auth     required       pam_succeed_if.so uid >= 1000 quiet
auth     include        system-auth
-auth    optional       pam_kwallet5.so
-auth    optional       pam_gnome_keyring.so

account  include        system-account
password include        system-password

session  required       pam_limits.so
session  include        system-session
-session optional       pam_kwallet5.so auto_start
-session optional       pam_gnome_keyring.so auto_start

# End /etc/pam.d/lightdm
EOF

cat > ${DEST}/etc/pam.d/lightdm-autologin << "EOF"
# Begin /etc/pam.d/lightdm-autologin

auth     requisite      pam_nologin.so
auth     required       pam_env.so

auth     required       pam_succeed_if.so uid >= 1000 quiet
auth     required       pam_permit.so

account  include        system-account

password required       pam_deny.so

session  required       pam_limits.so
session  include        system-session

# End /etc/pam.d/lightdm-autologin
EOF

cat > ${DEST}/etc/pam.d/lightdm-greeter << "EOF"
# Begin /etc/pam.d/lightdm-greeter

auth     required       pam_env.so
auth     required       pam_permit.so

account  required       pam_permit.so
password required       pam_deny.so

session  required       pam_unix.so
-session optional       pam_systemd.so

# End /etc/pam.d/lightdm-greeter
EOF

cat > ${DEST}/usr/share/polkit-1/rules.d/lightdm.rules << "EOF"
polkit.addRule(function(action, subject) {
    if (subject.user == "lightdm") {
        polkit.log("action=" + action);
        polkit.log("subject=" + subject);
        if (action.id.indexOf("org.freedesktop.login1.") == 0) {
            return polkit.Result.YES;
        }
        if (action.id.indexOf("org.freedesktop.consolekit.system.") == 0) {
            return polkit.Result.YES;
        }
        if (action.id.indexOf("org.freedesktop.upower.") == 0) {
            return polkit.Result.YES;
        }
    }
});
EOF

cat > ${DEST}/usr/lib/tmpfiles.d/lightdm.conf << "EOF"
d /run/lightdm 0711 lightdm lightdm
EOF

cat > ${DEST}/lib/systemd/system/lightdm.service << "EOF"
[Unit]
Description=Light Display Manager
Documentation=man:lightdm(1)
Conflicts=getty@tty1.service
After=systemd-user-sessions.service getty@tty1.service plymouth-quit.service

[Service]
ExecStart=/usr/sbin/lightdm
Restart=always
IgnoreSIGPIPE=no
BusName=org.freedesktop.DisplayManager

[Install]
Alias=display-manager.service
EOF

  chmod 755 ${DEST}/etc/lightdm/Xsession
  chmod 600 ${DEST}/usr/share/polkit-1/rules.d/lightdm.rules
}

. $(dirname $0)/master.sh
