--- a/libinput/events.cpp	2015-01-12 16:33:15.000000000 +0100
+++ b/libinput/events.cpp	2015-01-16 02:25:49.438516796 +0100
@@ -146,19 +146,33 @@
 InputRedirection::PointerAxis PointerEvent::axis() const
 {
     Q_ASSERT(type() == LIBINPUT_EVENT_POINTER_AXIS);
-    switch (libinput_event_pointer_get_axis(m_pointerEvent)) {
-    case LIBINPUT_POINTER_AXIS_SCROLL_HORIZONTAL:
+    if (libinput_event_pointer_has_axis(m_pointerEvent, LIBINPUT_POINTER_AXIS_SCROLL_HORIZONTAL))
         return InputRedirection::PointerAxisHorizontal;
-    case LIBINPUT_POINTER_AXIS_SCROLL_VERTICAL:
+
+    if (libinput_event_pointer_has_axis(m_pointerEvent, LIBINPUT_POINTER_AXIS_SCROLL_VERTICAL))
         return InputRedirection::PointerAxisVertical;
-    }
+
     abort();
 }
 
 qreal PointerEvent::axisValue() const
 {
     Q_ASSERT(type() == LIBINPUT_EVENT_POINTER_AXIS);
-    return libinput_event_pointer_get_axis_value(m_pointerEvent);
+
+    enum libinput_pointer_axis axis_scroll;
+
+    if (libinput_event_pointer_has_axis(m_pointerEvent, LIBINPUT_POINTER_AXIS_SCROLL_HORIZONTAL))
+      axis_scroll = LIBINPUT_POINTER_AXIS_SCROLL_HORIZONTAL;
+    else if (libinput_event_pointer_has_axis(m_pointerEvent, LIBINPUT_POINTER_AXIS_SCROLL_VERTICAL))
+      axis_scroll = LIBINPUT_POINTER_AXIS_SCROLL_VERTICAL;
+    else
+      abort();
+
+    if (libinput_event_pointer_get_axis_source(m_pointerEvent) ==  LIBINPUT_POINTER_AXIS_SOURCE_WHEEL)
+      return 10 * libinput_event_pointer_get_axis_value_discrete(m_pointerEvent, axis_scroll);
+    else
+      return libinput_event_pointer_get_axis_value(m_pointerEvent, axis_scroll);
+
 }
 
 }
