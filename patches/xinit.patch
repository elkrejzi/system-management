diff -Naur a/cpprules.in b/cpprules.in
--- a/cpprules.in	2013-09-08 18:37:33.000000000 +0200
+++ b/cpprules.in	2014-07-26 23:18:50.312603841 +0200
@@ -15,4 +15,4 @@
 SUFFIXES = .cpp
 
 .cpp:
-	$(AM_V_GEN)$(RAWCPP) $(RAWCPPFLAGS) $(CPP_FILES_FLAGS) < $< | $(CPP_SED_MAGIC) > $@
+	$(AM_V_GEN)$(RAWCPP) $(RAWCPPFLAGS) $(CPP_FILES_FLAGS) $< | $(CPP_SED_MAGIC) > $@
diff -Naur a/startx.cpp b/startx.cpp
--- a/startx.cpp	2013-09-08 18:37:33.000000000 +0200
+++ b/startx.cpp	2014-07-26 23:18:27.884223762 +0200
@@ -287,7 +287,7 @@
     dummy=0
 
     XCOMM create a file with auth information for the server. ':0' is a dummy.
-    xserverauthfile=$HOME/.serverauth.$$
+    xserverauthfile=`mktemp -p /tmp serverauth.XXXXXXXXXX`
     trap "rm -f '$xserverauthfile'" HUP INT QUIT ILL TRAP KILL BUS TERM
     xauth -q -f "$xserverauthfile" << EOF
 add :$dummy . $mcookie
@@ -302,9 +302,9 @@
     XCOMM now add the same credentials to the client authority file
     XCOMM if '$displayname' already exists do not overwrite it as another
     XCOMM server man need it. Add them to the '$xserverauthfile' instead.
-    for displayname in $authdisplay $hostname$authdisplay; do
+    for displayname in $authdisplay $hostname/unix$authdisplay; do
         authcookie=`XAUTH list "$displayname" @@
-        | sed -n "s/.*$displayname[[:space:]*].*[[:space:]*]//p"` 2>/dev/null;
+        | sed -n "s/.*$hostname\/unix$authdisplay[[:space:]*].*[[:space:]*]//p"` 2>/dev/null;
         if [ "z${authcookie}" = "z" ] ; then
             XAUTH -q << EOF 
 add $displayname . $mcookie
diff -Naur a/xinit.c b/xinit.c
--- a/xinit.c	2013-09-08 18:37:33.000000000 +0200
+++ b/xinit.c	2014-07-26 23:18:39.897427347 +0200
@@ -390,7 +390,7 @@
 }
 
 static pid_t
-startServer(char *server[])
+startServer(char *server_argv[])
 {
     sigset_t mask, old;
     const char * const *cpp;
@@ -422,12 +422,12 @@
          * if client is xterm -L
          */
         setpgid(0,getpid());
-        Execute(server);
+        Execute(server_argv);
 
-        Error("unable to run server \"%s\"", server[0]);
+        Error("unable to run server \"%s\"", server_argv[0]);
 
         fprintf(stderr, "Use the -- option, or make sure that %s is in your path and\n", bindir);
-        fprintf(stderr, "that \"%s\" is a program or a link to the right type of server\n", server[0]);
+        fprintf(stderr, "that \"%s\" is a program or a link to the right type of server\n", server_argv[0]);
         fprintf(stderr, "for your display.  Possible server names include:\n\n");
         for (cpp = server_names; *cpp; cpp++)
             fprintf(stderr, "    %s\n", *cpp);
@@ -556,7 +556,7 @@
 }
 
 static pid_t
-startClient(char *client[])
+startClient(char *client_argv[])
 {
     clientpid = fork();
     if (clientpid == 0) {
@@ -568,8 +568,8 @@
             _exit(EXIT_FAILURE);
         }
         setpgid(0, getpid());
-        Execute(client);
-        Error("Unable to run program \"%s\"", client[0]);
+        Execute(client_argv);
+        Error("Unable to run program \"%s\"", client_argv[0]);
 
         fprintf(stderr, "Specify a program on the command line or make sure that %s\n", bindir);
         fprintf(stderr, "is in your path.\n\n");
