--- a/ext/vulkan/vkdevice.c	2016-04-08 14:03:20.000000000 +0200
+++ b/ext/vulkan/vkdevice.c	2016-04-21 18:49:49.049777649 +0200
@@ -28,7 +28,7 @@
 #include <string.h>
 
 static const char *device_validation_layers[] = {
-  "VK_LAYER_LUNARG_threading",
+  "VK_LAYER_GOOGLE_threading",
   "VK_LAYER_LUNARG_mem_tracker",
   "VK_LAYER_LUNARG_object_tracker",
   "VK_LAYER_LUNARG_draw_state",
--- a/ext/vulkan/vkimagememory.c	2016-03-24 12:36:40.000000000 +0100
+++ b/ext/vulkan/vkimagememory.c	2016-04-21 18:49:59.705091511 +0200
@@ -442,6 +442,8 @@
   barrier->srcAccessMask = _access_flags_from_layout (vk_mem->image_layout);
   barrier->oldLayout = vk_mem->image_layout;
   barrier->newLayout = image_layout;
+  barrier->srcQueueFamilyIndex = 0;
+  barrier->dstQueueFamilyIndex = 0;
   barrier->image = vk_mem->image;
   GST_VK_IMAGE_SUBRESOURCE_RANGE (barrier->subresourceRange,
       VK_IMAGE_ASPECT_COLOR_BIT, 0, 1, 0, 1);
--- a/ext/vulkan/vkinstance.c	2016-04-08 14:03:20.000000000 +0200
+++ b/ext/vulkan/vkinstance.c	2016-04-21 18:49:49.049777649 +0200
@@ -30,7 +30,7 @@
 #define APP_SHORT_NAME "GStreamer"
 
 static const char *instance_validation_layers[] = {
-  "VK_LAYER_LUNARG_threading",
+  "VK_LAYER_GOOGLE_threading",
   "VK_LAYER_LUNARG_mem_tracker",
   "VK_LAYER_LUNARG_object_tracker",
   "VK_LAYER_LUNARG_draw_state",
--- a/ext/vulkan/vkswapper.c	2016-03-24 12:36:40.000000000 +0100
+++ b/ext/vulkan/vkswapper.c	2016-04-21 18:50:25.308850846 +0200
@@ -93,12 +93,16 @@
   switch (format) {
       /* double check endianess */
     case VK_FORMAT_R8G8B8A8_UNORM:
+    case VK_FORMAT_R8G8B8A8_SRGB:
       return GST_VIDEO_FORMAT_RGBA;
     case VK_FORMAT_R8G8B8_UNORM:
+    case VK_FORMAT_R8G8B8_SRGB:
       return GST_VIDEO_FORMAT_RGB;
     case VK_FORMAT_B8G8R8A8_UNORM:
+    case VK_FORMAT_B8G8R8A8_SRGB:
       return GST_VIDEO_FORMAT_BGRA;
     case VK_FORMAT_B8G8R8_UNORM:
+    case VK_FORMAT_B8G8R8_SRGB:
       return GST_VIDEO_FORMAT_BGR;
     default:
       return GST_VIDEO_FORMAT_UNKNOWN;
@@ -106,17 +110,33 @@
 }
 
 static VkFormat
-_vk_format_from_video_format (GstVideoFormat v_format)
+_vk_format_from_video_info (GstVideoInfo * v_info)
 {
-  switch (v_format) {
+  switch (GST_VIDEO_INFO_FORMAT (v_info)) {
     case GST_VIDEO_FORMAT_RGBA:
-      return VK_FORMAT_R8G8B8A8_UNORM;
+      if (GST_VIDEO_INFO_COLORIMETRY (v_info).transfer ==
+          GST_VIDEO_TRANSFER_SRGB)
+        return VK_FORMAT_R8G8B8A8_SRGB;
+      else
+        return VK_FORMAT_R8G8B8A8_UNORM;
     case GST_VIDEO_FORMAT_RGB:
-      return VK_FORMAT_R8G8B8_UNORM;
+      if (GST_VIDEO_INFO_COLORIMETRY (v_info).transfer ==
+          GST_VIDEO_TRANSFER_SRGB)
+        return VK_FORMAT_R8G8B8_SRGB;
+      else
+        return VK_FORMAT_R8G8B8_UNORM;
     case GST_VIDEO_FORMAT_BGRA:
-      return VK_FORMAT_B8G8R8A8_UNORM;
+      if (GST_VIDEO_INFO_COLORIMETRY (v_info).transfer ==
+          GST_VIDEO_TRANSFER_SRGB)
+        return VK_FORMAT_B8G8R8A8_SRGB;
+      else
+        return VK_FORMAT_B8G8R8A8_UNORM;
     case GST_VIDEO_FORMAT_BGR:
-      return VK_FORMAT_B8G8R8_UNORM;
+      if (GST_VIDEO_INFO_COLORIMETRY (v_info).transfer ==
+          GST_VIDEO_TRANSFER_SRGB)
+        return VK_FORMAT_B8G8R8_SRGB;
+      else
+        return VK_FORMAT_B8G8R8_UNORM;
     default:
       return VK_FORMAT_UNDEFINED;
   }
@@ -531,11 +551,13 @@
 
   {
     VkSubmitInfo submit_info = { 0, };
+    VkPipelineStageFlags stages = VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT;
 
     submit_info.sType = VK_STRUCTURE_TYPE_SUBMIT_INFO;
     submit_info.pNext = NULL;
     submit_info.waitSemaphoreCount = 0;
     submit_info.pWaitSemaphores = NULL;
+    submit_info.pWaitDstStageMask = &stages;
     submit_info.commandBufferCount = 1;
     submit_info.pCommandBuffers = &cmd;
     submit_info.signalSemaphoreCount = 0;
@@ -629,8 +651,7 @@
     preTransform = swapper->surf_props.currentTransform;
   }
 
-  format =
-      _vk_format_from_video_format (GST_VIDEO_INFO_FORMAT (&swapper->v_info));
+  format = _vk_format_from_video_info (&swapper->v_info);
   color_space = _vk_color_space_from_video_info (&swapper->v_info);
 
   if ((swapper->surf_props.supportedCompositeAlpha &
@@ -930,11 +951,13 @@
 
   {
     VkSubmitInfo submit_info = { 0, };
+    VkPipelineStageFlags stages = VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT;
 
     submit_info.sType = VK_STRUCTURE_TYPE_SUBMIT_INFO;
     submit_info.pNext = NULL;
     submit_info.waitSemaphoreCount = 1;
     submit_info.pWaitSemaphores = &semaphore;
+    submit_info.pWaitDstStageMask = &stages;
     submit_info.commandBufferCount = 1;
     submit_info.pCommandBuffers = &cmd_data.cmd;
     submit_info.signalSemaphoreCount = 0;
--- a/ext/vulkan/vkupload.c	2016-03-24 12:36:40.000000000 +0100
+++ b/ext/vulkan/vkupload.c	2016-04-21 18:50:40.354300235 +0200
@@ -787,6 +787,7 @@
 gst_vulkan_upload_prepare_output_buffer (GstBaseTransform * bt,
     GstBuffer * inbuf, GstBuffer ** outbuf)
 {
+  GstBaseTransformClass *bclass = GST_BASE_TRANSFORM_GET_CLASS (bt);
   GstVulkanUpload *vk_upload = GST_VULKAN_UPLOAD (bt);
   GstFlowReturn ret;
 
@@ -818,6 +819,12 @@
     }
   } while (FALSE);
 
+  if (ret == GST_FLOW_OK) {
+    /* basetransform doesn't unref if they're the same */
+    if (inbuf != *outbuf)
+      bclass->copy_metadata (bt, inbuf, *outbuf);
+  }
+
   return ret;
 }
 
