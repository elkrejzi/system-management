--- a/dix/window.c	2016-02-08 19:12:02.000000000 +0100
+++ b/dix/window.c	2016-02-10 02:34:20.441431126 +0100
@@ -3647,7 +3647,7 @@
  *	all of the windows
  */
 void
-SetRootClip(ScreenPtr pScreen, Bool enable)
+SetRootClip(ScreenPtr pScreen, int enable)
 {
     WindowPtr pWin = pScreen->root;
     WindowPtr pChild;
@@ -3655,6 +3655,7 @@
     Bool anyMarked = FALSE;
     WindowPtr pLayerWin;
     BoxRec box;
+    enum RootClipMode mode = enable;
 
     if (!pWin)
         return;
@@ -3684,18 +3685,23 @@
      * that assume the root borderClip can't change well, normally
      * it doesn't...)
      */
-    if (enable) {
+    if (mode != ROOT_SIZE_NONE) {
+        pWin->drawable.width = pScreen->width;
+        pWin->drawable.height = pScreen->height;
+
         box.x1 = 0;
         box.y1 = 0;
         box.x2 = pScreen->width;
         box.y2 = pScreen->height;
+
         RegionInit(&pWin->winSize, &box, 1);
         RegionInit(&pWin->borderSize, &box, 1);
-        if (WasViewable)
-            RegionReset(&pWin->borderClip, &box);
-        pWin->drawable.width = pScreen->width;
-        pWin->drawable.height = pScreen->height;
         RegionBreak(&pWin->clipList);
+
+	if (WasViewable && mode == ROOT_SIZE_SCREEN)
+            RegionReset(&pWin->borderClip, &box);
+	else
+            RegionEmpty(&pWin->borderClip);
     }
     else {
         RegionEmpty(&pWin->borderClip);
--- a/hw/xwayland/xwayland-glamor.c	2016-02-08 23:52:26.000000000 +0100
+++ b/hw/xwayland/xwayland-glamor.c	2016-02-10 02:34:20.441431126 +0100
@@ -236,7 +236,7 @@
     if (xwl_screen->rootless) {
         screen->devPrivate =
             fbCreatePixmap(screen, 0, 0, screen->rootDepth, 0);
-        SetRootClip(screen, FALSE);
+        SetRootClip(screen, ROOT_SIZE_SCREEN_EMPTY);
     }
     else {
         screen->devPrivate =
--- a/hw/xwayland/xwayland-output.c	2016-01-28 23:06:17.000000000 +0100
+++ b/hw/xwayland/xwayland-output.c	2016-02-10 02:34:33.238665047 +0100
@@ -164,8 +164,7 @@
     struct xwl_screen *xwl_screen = xwl_output->xwl_screen;
     double mmpd;
 
-    if (!xwl_screen->rootless)
-        SetRootClip(xwl_screen->screen, FALSE);
+    SetRootClip(xwl_screen->screen, FALSE);
 
     xwl_screen->width = width;
     xwl_screen->height = height;
@@ -181,6 +180,11 @@
         xwl_screen->screen->mmHeight = height * mmpd;
     }
 
+    if (xwl_screen->rootless)
+        SetRootClip(xwl_screen->screen, ROOT_SIZE_SCREEN_EMPTY);
+    else
+        SetRootClip(xwl_screen->screen, ROOT_SIZE_SCREEN);
+
     if (xwl_screen->screen->root) {
         xwl_screen->screen->root->drawable.width = width;
         xwl_screen->screen->root->drawable.height = height;
@@ -188,9 +192,6 @@
     }
 
     update_desktop_dimensions();
-
-    if (!xwl_screen->rootless)
-        SetRootClip(xwl_screen->screen, TRUE);
 }
 
 static void
@@ -298,6 +299,7 @@
 
     wl_output_destroy(xwl_output->output);
     xorg_list_del(&xwl_output->link);
+    RRCrtcDestroy(xwl_output->randr_crtc);
     RROutputDestroy(xwl_output->randr_output);
 
     xorg_list_for_each_entry(it, &xwl_screen->output_list, link)
--- a/hw/xwayland/xwayland-shm.c	2016-02-08 23:17:07.000000000 +0100
+++ b/hw/xwayland/xwayland-shm.c	2016-02-10 02:34:20.441431126 +0100
@@ -282,7 +282,7 @@
     if (xwl_screen->rootless) {
         screen->devPrivate =
             fbCreatePixmap(screen, 0, 0, screen->rootDepth, 0);
-        SetRootClip(screen, FALSE);
+        SetRootClip(screen, ROOT_SIZE_SCREEN_EMPTY);
     }
     else
         screen->devPrivate =
--- a/include/window.h	2016-01-06 18:23:08.000000000 +0100
+++ b/include/window.h	2016-02-10 02:34:20.441431126 +0100
@@ -72,6 +72,12 @@
 typedef struct _BackingStore *BackingStorePtr;
 typedef struct _Window *WindowPtr;
 
+enum RootClipMode {
+	ROOT_SIZE_NONE = 0, /**< resize the root window to 0x0 */
+	ROOT_SIZE_SCREEN = 1, /**< resize the root window to fit screen */
+	ROOT_SIZE_SCREEN_EMPTY = 2, /**< as above, but empty clip */
+};
+
 typedef int (*VisitWindowProcPtr) (WindowPtr pWin,
                                    void *data);
 
@@ -221,7 +227,7 @@
 
 extern _X_EXPORT RegionPtr CreateClipShape(WindowPtr /* pWin */ );
 
-extern _X_EXPORT void SetRootClip(ScreenPtr pScreen, Bool enable);
+extern _X_EXPORT void SetRootClip(ScreenPtr pScreen, int enable);
 extern _X_EXPORT void PrintWindowTree(void);
 extern _X_EXPORT void PrintPassiveGrabs(void);
 
