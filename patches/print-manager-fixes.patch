diff -Naur a/libkcups/KCupsConnection.cpp b/libkcups/KCupsConnection.cpp
--- a/libkcups/KCupsConnection.cpp	2014-07-16 10:26:50.000000000 +0200
+++ b/libkcups/KCupsConnection.cpp	2014-10-15 21:03:06.021460840 +0200
@@ -377,11 +377,11 @@
         response = request.sendIppRequest();
     } while (retry("/", operation));
 
-#if CUPS_VERSION_MAJOR == 1 && CUPS_VERSION_MINOR >= 6
+#if !(CUPS_VERSION_MAJOR == 1 && CUPS_VERSION_MINOR < 6)
     if (response && ippGetStatusCode(response) == IPP_OK) {
 #else
     if (response && response->request.status.status_code == IPP_OK) {
-#endif // CUPS_VERSION_MAJOR == 1 && CUPS_VERSION_MINOR >= 6
+#endif // !(CUPS_VERSION_MAJOR == 1 && CUPS_VERSION_MINOR < 6)
         ipp_attribute_t *attr;
         if (subscriptionId >= 0) {
             // Request was ok, just return the current subscription
@@ -392,7 +392,7 @@
             kWarning() << "No notify-subscription-id in response!";
             ret = -1;
         } else {
-#if CUPS_VERSION_MAJOR == 1 && CUPS_VERSION_MINOR >= 6
+#if !(CUPS_VERSION_MAJOR == 1 && CUPS_VERSION_MINOR < 6)
             ret = ippGetInteger(attr, 0);
         }
     } else if (subscriptionId >= 0 && response && ippGetStatusCode(response) == IPP_NOT_FOUND) {
@@ -406,7 +406,7 @@
         kDebug() << "Subscription not found";
         // When the subscription is not found try to get a new one
         return renewDBusSubscription(-1, leaseDuration, events);
-#endif // CUPS_VERSION_MAJOR == 1 && CUPS_VERSION_MINOR >= 6
+#endif // !(CUPS_VERSION_MAJOR == 1 && CUPS_VERSION_MINOR < 6)
     } else {
         kDebug() << "Request failed" << cupsLastError() << httpGetStatus(CUPS_HTTP_DEFAULT);
         // When the server stops/restarts we will have some error so ignore it
@@ -582,7 +582,7 @@
     ipp_attribute_t *attr;
     ReturnArguments ret;
 
-#if CUPS_VERSION_MAJOR == 1 && CUPS_VERSION_MINOR >= 6
+#if !(CUPS_VERSION_MAJOR == 1 && CUPS_VERSION_MINOR < 6)
     QVariantHash destAttributes;
     for (attr = ippFirstAttribute(response); attr != NULL; attr = ippNextAttribute(response)) {
         // We hit an attribute sepparator
@@ -659,7 +659,7 @@
             break;
         }
     }
-#endif // CUPS_VERSION_MAJOR == 1 && CUPS_VERSION_MINOR >= 6
+#endif // !(CUPS_VERSION_MAJOR == 1 && CUPS_VERSION_MINOR < 6)
 
     return ret;
 }
@@ -667,7 +667,7 @@
 QVariant KCupsConnection::ippAttrToVariant(ipp_attribute_t *attr)
 {
     QVariant ret;
-#if CUPS_VERSION_MAJOR == 1 && CUPS_VERSION_MINOR >= 6
+#if !(CUPS_VERSION_MAJOR == 1 && CUPS_VERSION_MINOR < 6)
     switch (ippGetValueTag(attr)) {
     case IPP_TAG_INTEGER:
     case IPP_TAG_ENUM:
@@ -760,7 +760,7 @@
             ret = values;
         }
     }
-#endif // CUPS_VERSION_MAJOR == 1 && CUPS_VERSION_MINOR >= 6
+#endif // !(CUPS_VERSION_MAJOR == 1 && CUPS_VERSION_MINOR < 6)
     return ret;
 }
 
